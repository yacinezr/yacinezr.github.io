{"version":3,"file":"app/account.chunk.js","sources":["webpack:///./src/main/webapp/app/modules/account/index.tsx","webpack:///./src/main/webapp/app/modules/account/password/password.tsx","webpack:///./src/main/webapp/app/modules/account/settings/settings.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport Settings from './settings/settings';\r\nimport Password from './password/password';\r\n\r\nconst Routes = ({ match }) => (\r\n  <div>\r\n    <ErrorBoundaryRoute path={`${match.url}/settings`} component={Settings} />\r\n    <ErrorBoundaryRoute path={`${match.url}/password`} component={Password} />\r\n  </div>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\r\nimport { Row, Col, Button } from 'reactstrap';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getSession } from 'app/shared/reducers/authentication';\r\nimport PasswordStrengthBar from 'app/shared/layout/password/password-strength-bar';\r\nimport { savePassword, reset } from './password.reducer';\r\n\r\nexport interface IUserPasswordProps extends StateProps, DispatchProps {}\r\n\r\nexport interface IUserPasswordState {\r\n  password: string;\r\n}\r\n\r\nexport class PasswordPage extends React.Component<IUserPasswordProps, IUserPasswordState> {\r\n  state: IUserPasswordState = {\r\n    password: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.reset();\r\n    this.props.getSession();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.reset();\r\n  }\r\n\r\n  handleValidSubmit = (event, values) => {\r\n    this.props.savePassword(values.currentPassword, values.newPassword);\r\n  };\r\n\r\n  updatePassword = event => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { account } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"password-title\">Password for {account.login}</h2>\r\n            <AvForm id=\"password-form\" onValidSubmit={this.handleValidSubmit}>\r\n              <AvField\r\n                name=\"currentPassword\"\r\n                label=\"Current password\"\r\n                placeholder=\"Current password\"\r\n                type=\"password\"\r\n                validate={{\r\n                  required: { value: true, errorMessage: 'Your password is required.' }\r\n                }}\r\n              />\r\n              <AvField\r\n                name=\"newPassword\"\r\n                label=\"New password\"\r\n                placeholder=\"New password\"\r\n                type=\"password\"\r\n                validate={{\r\n                  required: { value: true, errorMessage: 'Your password is required.' },\r\n                  minLength: { value: 4, errorMessage: 'Your password is required to be at least 4 characters.' },\r\n                  maxLength: { value: 50, errorMessage: 'Your password cannot be longer than 50 characters.' }\r\n                }}\r\n                onChange={this.updatePassword}\r\n              />\r\n              <PasswordStrengthBar password={this.state.password} />\r\n              <AvField\r\n                name=\"confirmPassword\"\r\n                label=\"New password confirmation\"\r\n                placeholder=\"Confirm the new password\"\r\n                type=\"password\"\r\n                validate={{\r\n                  required: {\r\n                    value: true,\r\n                    errorMessage: 'Your confirmation password is required.'\r\n                  },\r\n                  minLength: {\r\n                    value: 4,\r\n                    errorMessage: 'Your confirmation password is required to be at least 4 characters.'\r\n                  },\r\n                  maxLength: {\r\n                    value: 50,\r\n                    errorMessage: 'Your confirmation password cannot be longer than 50 characters.'\r\n                  },\r\n                  match: {\r\n                    value: 'newPassword',\r\n                    errorMessage: 'The password and its confirmation do not match!'\r\n                  }\r\n                }}\r\n              />\r\n              <Button color=\"success\" type=\"submit\">\r\n                Save\r\n              </Button>\r\n            </AvForm>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ authentication }: IRootState) => ({\r\n  account: authentication.account,\r\n  isAuthenticated: authentication.isAuthenticated\r\n});\r\n\r\nconst mapDispatchToProps = { getSession, savePassword, reset };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PasswordPage);\r\n","import React from 'react';\r\nimport { Button, Col, Alert, Row } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getSession } from 'app/shared/reducers/authentication';\r\nimport { saveAccountSettings, reset } from './settings.reducer';\r\n\r\nexport interface IUserSettingsProps extends StateProps, DispatchProps {}\r\n\r\nexport interface IUserSettingsState {\r\n  account: any;\r\n}\r\n\r\nexport class SettingsPage extends React.Component<IUserSettingsProps, IUserSettingsState> {\r\n  componentDidMount() {\r\n    this.props.getSession();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.reset();\r\n  }\r\n\r\n  handleValidSubmit = (event, values) => {\r\n    const account = {\r\n      ...this.props.account,\r\n      ...values\r\n    };\r\n\r\n    this.props.saveAccountSettings(account);\r\n    event.persist();\r\n  };\r\n\r\n  render() {\r\n    const { account } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"settings-title\">User settings for {account.login}</h2>\r\n            <AvForm id=\"settings-form\" onValidSubmit={this.handleValidSubmit}>\r\n              {/* First name */}\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"firstName\"\r\n                label=\"First Name\"\r\n                id=\"firstName\"\r\n                placeholder=\"Your first name\"\r\n                validate={{\r\n                  required: { value: true, errorMessage: 'Your first name is required.' },\r\n                  minLength: { value: 1, errorMessage: 'Your first name is required to be at least 1 character' },\r\n                  maxLength: { value: 50, errorMessage: 'Your first name cannot be longer than 50 characters' }\r\n                }}\r\n                value={account.firstName}\r\n              />\r\n              {/* Last name */}\r\n              <AvField\r\n                className=\"form-control\"\r\n                name=\"lastName\"\r\n                label=\"Last Name\"\r\n                id=\"lastName\"\r\n                placeholder=\"Your last name\"\r\n                validate={{\r\n                  required: { value: true, errorMessage: 'Your last name is required.' },\r\n                  minLength: { value: 1, errorMessage: 'Your last name is required to be at least 1 character' },\r\n                  maxLength: { value: 50, errorMessage: 'Your last name cannot be longer than 50 characters' }\r\n                }}\r\n                value={account.lastName}\r\n              />\r\n              {/* Email */}\r\n              <AvField\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                placeholder=\"Your email\"\r\n                type=\"email\"\r\n                validate={{\r\n                  required: { value: true, errorMessage: 'Your email is required.' },\r\n                  minLength: { value: 5, errorMessage: 'Your email is required to be at least 5 characters.' },\r\n                  maxLength: { value: 254, errorMessage: 'Your email cannot be longer than 50 characters.' }\r\n                }}\r\n                value={account.email}\r\n              />\r\n              <Button color=\"primary\" type=\"submit\">\r\n                Save\r\n              </Button>\r\n            </AvForm>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ authentication }: IRootState) => ({\r\n  account: authentication.account,\r\n  isAuthenticated: authentication.isAuthenticated\r\n});\r\n\r\nconst mapDispatchToProps = { getSession, saveAccountSettings, reset };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SettingsPage);\r\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAHA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAWA;AACA;AACA;AAEA;AACA;AACA;;AAkEA;AAjFA;AACA;AACA;AACA;AAEA;AACA;AACA;AAUA;AACA;AAEA;AAEA;AACA;AACA;;AAAA;AACA;AACA;AAMA;AACA;AAEA;AAMA;AACA;AACA;AACA;AAGA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAQA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACrHA;AACA;AACA;AAEA;AAGA;AACA;AAQA;AAAA;AAAA;AAAA;AASA;AACA;AAKA;AACA;AACA;;AA6DA;AA7EA;AACA;AACA;AAEA;AACA;AACA;AAYA;AACA;AAEA;AAEA;AACA;AACA;;AAAA;AACA;AAEA;AAOA;AACA;AACA;AACA;AAIA;AAOA;AACA;AACA;AACA;AAIA;AAMA;AACA;AACA;AACA;AAGA;AAQA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAKA;AACA;AACA;;;;;;A","sourceRoot":""}