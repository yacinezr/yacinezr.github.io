{"version":3,"file":"app/main.bundle.js","sources":["webpack:///webpack/bootstrap","webpack:///./src/main/webapp/app/app.css","webpack:///./src/main/webapp/app/modules/home/home.css","webpack:///./src/main/webapp/app/shared/layout/footer/footer.css","webpack:///./src/main/webapp/app/shared/layout/header/header.css","webpack:///./src/main/webapp/app/shared/layout/password/password-strength-bar.css","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///(webpack)/hot sync nonrecursive ^\\.\\/log$","webpack:///./src/main/webapp/app/app.css?232f","webpack:///./src/main/webapp/app/app.tsx","webpack:///./src/main/webapp/app/config/axios-interceptor.ts","webpack:///./src/main/webapp/app/config/constants.ts","webpack:///./src/main/webapp/app/config/devtools.tsx","webpack:///./src/main/webapp/app/config/error-middleware.ts","webpack:///./src/main/webapp/app/config/icon-loader.ts","webpack:///./src/main/webapp/app/config/logger-middleware.ts","webpack:///./src/main/webapp/app/config/notification-middleware.ts","webpack:///./src/main/webapp/app/config/store.ts","webpack:///./src/main/webapp/app/entities/index.tsx","webpack:///./src/main/webapp/app/entities/ps-custom-fields-template/index.tsx","webpack:///./src/main/webapp/app/entities/ps-custom-fields-template/ps-custom-fields-template-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/ps-custom-fields-template/ps-custom-fields-template-detail.tsx","webpack:///./src/main/webapp/app/entities/ps-custom-fields-template/ps-custom-fields-template-update.tsx","webpack:///./src/main/webapp/app/entities/ps-custom-fields-template/ps-custom-fields-template.reducer.ts","webpack:///./src/main/webapp/app/entities/ps-custom-fields-template/ps-custom-fields-template.tsx","webpack:///./src/main/webapp/app/entities/ps-custom-fields-values/index.tsx","webpack:///./src/main/webapp/app/entities/ps-custom-fields-values/ps-custom-fields-values-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/ps-custom-fields-values/ps-custom-fields-values-detail.tsx","webpack:///./src/main/webapp/app/entities/ps-custom-fields-values/ps-custom-fields-values-update.tsx","webpack:///./src/main/webapp/app/entities/ps-custom-fields-values/ps-custom-fields-values.reducer.ts","webpack:///./src/main/webapp/app/entities/ps-custom-fields-values/ps-custom-fields-values.tsx","webpack:///./src/main/webapp/app/entities/ps-entity-template/index.tsx","webpack:///./src/main/webapp/app/entities/ps-entity-template/ps-entity-template-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/ps-entity-template/ps-entity-template-detail.tsx","webpack:///./src/main/webapp/app/entities/ps-entity-template/ps-entity-template-update.tsx","webpack:///./src/main/webapp/app/entities/ps-entity-template/ps-entity-template.reducer.ts","webpack:///./src/main/webapp/app/entities/ps-entity-template/ps-entity-template.tsx","webpack:///./src/main/webapp/app/entities/ps-entity/index.tsx","webpack:///./src/main/webapp/app/entities/ps-entity/ps-entity-delete-dialog.tsx","webpack:///./src/main/webapp/app/entities/ps-entity/ps-entity-detail.tsx","webpack:///./src/main/webapp/app/entities/ps-entity/ps-entity-update.tsx","webpack:///./src/main/webapp/app/entities/ps-entity/ps-entity.reducer.ts","webpack:///./src/main/webapp/app/entities/ps-entity/ps-entity.tsx","webpack:///./src/main/webapp/app/index.tsx","webpack:///./src/main/webapp/app/modules/account/activate/activate.reducer.ts","webpack:///./src/main/webapp/app/modules/account/activate/activate.tsx","webpack:///./src/main/webapp/app/modules/account/password-reset/finish/password-reset-finish.tsx","webpack:///./src/main/webapp/app/modules/account/password-reset/init/password-reset-init.tsx","webpack:///./src/main/webapp/app/modules/account/password-reset/password-reset.reducer.ts","webpack:///./src/main/webapp/app/modules/account/password/password.reducer.ts","webpack:///./src/main/webapp/app/modules/account/register/register.reducer.ts","webpack:///./src/main/webapp/app/modules/account/register/register.tsx","webpack:///./src/main/webapp/app/modules/account/settings/settings.reducer.ts","webpack:///./src/main/webapp/app/modules/administration/administration.reducer.ts","webpack:///./src/main/webapp/app/modules/administration/user-management/user-management.reducer.ts","webpack:///./src/main/webapp/app/modules/home/home.css?07e9","webpack:///./src/main/webapp/app/modules/home/home.tsx","webpack:///./src/main/webapp/app/modules/login/login-modal.tsx","webpack:///./src/main/webapp/app/modules/login/login.tsx","webpack:///./src/main/webapp/app/modules/login/logout.tsx","webpack:///./src/main/webapp/app/routes.tsx","webpack:///./src/main/webapp/app/shared/auth/private-route.tsx","webpack:///./src/main/webapp/app/shared/error/error-boundary-route.tsx","webpack:///./src/main/webapp/app/shared/error/error-boundary.tsx","webpack:///./src/main/webapp/app/shared/layout/footer/footer.css?b323","webpack:///./src/main/webapp/app/shared/layout/footer/footer.tsx","webpack:///./src/main/webapp/app/shared/layout/header/header-components.tsx","webpack:///./src/main/webapp/app/shared/layout/header/header.css?1e42","webpack:///./src/main/webapp/app/shared/layout/header/header.tsx","webpack:///./src/main/webapp/app/shared/layout/header/menus/account.tsx","webpack:///./src/main/webapp/app/shared/layout/header/menus/admin.tsx","webpack:///./src/main/webapp/app/shared/layout/header/menus/entities.tsx","webpack:///./src/main/webapp/app/shared/layout/header/menus/index.ts","webpack:///./src/main/webapp/app/shared/layout/password/password-strength-bar.css?1af0","webpack:///./src/main/webapp/app/shared/layout/password/password-strength-bar.tsx","webpack:///./src/main/webapp/app/shared/model/ps-custom-fields-template.model.ts","webpack:///./src/main/webapp/app/shared/model/ps-custom-fields-values.model.ts","webpack:///./src/main/webapp/app/shared/model/ps-entity-template.model.ts","webpack:///./src/main/webapp/app/shared/model/ps-entity.model.ts","webpack:///./src/main/webapp/app/shared/model/user.model.ts","webpack:///./src/main/webapp/app/shared/reducers/action-type.util.ts","webpack:///./src/main/webapp/app/shared/reducers/application-profile.ts","webpack:///./src/main/webapp/app/shared/reducers/authentication.ts","webpack:///./src/main/webapp/app/shared/reducers/index.ts","webpack:///./src/main/webapp/app/shared/util/entity-utils.ts","webpack:///./src/main/webapp/static/images/logo-jhipster-react.svg","webpack:///util (ignored)","webpack:///util (ignored)?e20e","webpack:///readable-stream (ignored)","webpack:///supports-color (ignored)","webpack:///chalk (ignored)","webpack:///fs (ignored)"],"sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n \tfunction hotDisposeChunk(chunkId) {\n \t\tdelete installedChunks[chunkId];\n \t}\n \tvar parentHotUpdateCallback = window[\"webpackHotUpdate\"];\n \twindow[\"webpackHotUpdate\"] = // eslint-disable-next-line no-unused-vars\n \tfunction webpackHotUpdateCallback(chunkId, moreModules) {\n \t\thotAddUpdateChunk(chunkId, moreModules);\n \t\tif (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);\n \t} ;\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadUpdateChunk(chunkId) {\n \t\tvar head = document.getElementsByTagName(\"head\")[0];\n \t\tvar script = document.createElement(\"script\");\n \t\tscript.charset = \"utf-8\";\n \t\tscript.src = __webpack_require__.p + \"\" + chunkId + \".\" + hotCurrentHash + \".hot-update.js\";\n \t\t;\n \t\thead.appendChild(script);\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotDownloadManifest(requestTimeout) {\n \t\trequestTimeout = requestTimeout || 10000;\n \t\treturn new Promise(function(resolve, reject) {\n \t\t\tif (typeof XMLHttpRequest === \"undefined\") {\n \t\t\t\treturn reject(new Error(\"No browser support\"));\n \t\t\t}\n \t\t\ttry {\n \t\t\t\tvar request = new XMLHttpRequest();\n \t\t\t\tvar requestPath = __webpack_require__.p + \"\" + hotCurrentHash + \".hot-update.json\";\n \t\t\t\trequest.open(\"GET\", requestPath, true);\n \t\t\t\trequest.timeout = requestTimeout;\n \t\t\t\trequest.send(null);\n \t\t\t} catch (err) {\n \t\t\t\treturn reject(err);\n \t\t\t}\n \t\t\trequest.onreadystatechange = function() {\n \t\t\t\tif (request.readyState !== 4) return;\n \t\t\t\tif (request.status === 0) {\n \t\t\t\t\t// timeout\n \t\t\t\t\treject(\n \t\t\t\t\t\tnew Error(\"Manifest request to \" + requestPath + \" timed out.\")\n \t\t\t\t\t);\n \t\t\t\t} else if (request.status === 404) {\n \t\t\t\t\t// no update available\n \t\t\t\t\tresolve();\n \t\t\t\t} else if (request.status !== 200 && request.status !== 304) {\n \t\t\t\t\t// other failure\n \t\t\t\t\treject(new Error(\"Manifest request to \" + requestPath + \" failed.\"));\n \t\t\t\t} else {\n \t\t\t\t\t// success\n \t\t\t\t\ttry {\n \t\t\t\t\t\tvar update = JSON.parse(request.responseText);\n \t\t\t\t\t} catch (e) {\n \t\t\t\t\t\treject(e);\n \t\t\t\t\t\treturn;\n \t\t\t\t\t}\n \t\t\t\t\tresolve(update);\n \t\t\t\t}\n \t\t\t};\n \t\t});\n \t}\n\n \tvar hotApplyOnUpdate = true;\n \tvar hotCurrentHash = \"f11bf0e5e99590d46797\"; // eslint-disable-line no-unused-vars\n \tvar hotRequestTimeout = 10000;\n \tvar hotCurrentModuleData = {};\n \tvar hotCurrentChildModule; // eslint-disable-line no-unused-vars\n \tvar hotCurrentParents = []; // eslint-disable-line no-unused-vars\n \tvar hotCurrentParentsTemp = []; // eslint-disable-line no-unused-vars\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateRequire(moduleId) {\n \t\tvar me = installedModules[moduleId];\n \t\tif (!me) return __webpack_require__;\n \t\tvar fn = function(request) {\n \t\t\tif (me.hot.active) {\n \t\t\t\tif (installedModules[request]) {\n \t\t\t\t\tif (installedModules[request].parents.indexOf(moduleId) === -1) {\n \t\t\t\t\t\tinstalledModules[request].parents.push(moduleId);\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\thotCurrentParents = [moduleId];\n \t\t\t\t\thotCurrentChildModule = request;\n \t\t\t\t}\n \t\t\t\tif (me.children.indexOf(request) === -1) {\n \t\t\t\t\tme.children.push(request);\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tconsole.warn(\n \t\t\t\t\t\"[HMR] unexpected require(\" +\n \t\t\t\t\t\trequest +\n \t\t\t\t\t\t\") from disposed module \" +\n \t\t\t\t\t\tmoduleId\n \t\t\t\t);\n \t\t\t\thotCurrentParents = [];\n \t\t\t}\n \t\t\treturn __webpack_require__(request);\n \t\t};\n \t\tvar ObjectFactory = function ObjectFactory(name) {\n \t\t\treturn {\n \t\t\t\tconfigurable: true,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: function() {\n \t\t\t\t\treturn __webpack_require__[name];\n \t\t\t\t},\n \t\t\t\tset: function(value) {\n \t\t\t\t\t__webpack_require__[name] = value;\n \t\t\t\t}\n \t\t\t};\n \t\t};\n \t\tfor (var name in __webpack_require__) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(__webpack_require__, name) &&\n \t\t\t\tname !== \"e\" &&\n \t\t\t\tname !== \"t\"\n \t\t\t) {\n \t\t\t\tObject.defineProperty(fn, name, ObjectFactory(name));\n \t\t\t}\n \t\t}\n \t\tfn.e = function(chunkId) {\n \t\t\tif (hotStatus === \"ready\") hotSetStatus(\"prepare\");\n \t\t\thotChunksLoading++;\n \t\t\treturn __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {\n \t\t\t\tfinishChunkLoading();\n \t\t\t\tthrow err;\n \t\t\t});\n\n \t\t\tfunction finishChunkLoading() {\n \t\t\t\thotChunksLoading--;\n \t\t\t\tif (hotStatus === \"prepare\") {\n \t\t\t\t\tif (!hotWaitingFilesMap[chunkId]) {\n \t\t\t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t\t\t}\n \t\t\t\t\tif (hotChunksLoading === 0 && hotWaitingFiles === 0) {\n \t\t\t\t\t\thotUpdateDownloaded();\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t};\n \t\tfn.t = function(value, mode) {\n \t\t\tif (mode & 1) value = fn(value);\n \t\t\treturn __webpack_require__.t(value, mode & ~1);\n \t\t};\n \t\treturn fn;\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotCreateModule(moduleId) {\n \t\tvar hot = {\n \t\t\t// private stuff\n \t\t\t_acceptedDependencies: {},\n \t\t\t_declinedDependencies: {},\n \t\t\t_selfAccepted: false,\n \t\t\t_selfDeclined: false,\n \t\t\t_disposeHandlers: [],\n \t\t\t_main: hotCurrentChildModule !== moduleId,\n\n \t\t\t// Module API\n \t\t\tactive: true,\n \t\t\taccept: function(dep, callback) {\n \t\t\t\tif (typeof dep === \"undefined\") hot._selfAccepted = true;\n \t\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function() {};\n \t\t\t\telse hot._acceptedDependencies[dep] = callback || function() {};\n \t\t\t},\n \t\t\tdecline: function(dep) {\n \t\t\t\tif (typeof dep === \"undefined\") hot._selfDeclined = true;\n \t\t\t\telse if (typeof dep === \"object\")\n \t\t\t\t\tfor (var i = 0; i < dep.length; i++)\n \t\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n \t\t\t\telse hot._declinedDependencies[dep] = true;\n \t\t\t},\n \t\t\tdispose: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\taddDisposeHandler: function(callback) {\n \t\t\t\thot._disposeHandlers.push(callback);\n \t\t\t},\n \t\t\tremoveDisposeHandler: function(callback) {\n \t\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n \t\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t// Management API\n \t\t\tcheck: hotCheck,\n \t\t\tapply: hotApply,\n \t\t\tstatus: function(l) {\n \t\t\t\tif (!l) return hotStatus;\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\taddStatusHandler: function(l) {\n \t\t\t\thotStatusHandlers.push(l);\n \t\t\t},\n \t\t\tremoveStatusHandler: function(l) {\n \t\t\t\tvar idx = hotStatusHandlers.indexOf(l);\n \t\t\t\tif (idx >= 0) hotStatusHandlers.splice(idx, 1);\n \t\t\t},\n\n \t\t\t//inherit from previous dispose call\n \t\t\tdata: hotCurrentModuleData[moduleId]\n \t\t};\n \t\thotCurrentChildModule = undefined;\n \t\treturn hot;\n \t}\n\n \tvar hotStatusHandlers = [];\n \tvar hotStatus = \"idle\";\n\n \tfunction hotSetStatus(newStatus) {\n \t\thotStatus = newStatus;\n \t\tfor (var i = 0; i < hotStatusHandlers.length; i++)\n \t\t\thotStatusHandlers[i].call(null, newStatus);\n \t}\n\n \t// while downloading\n \tvar hotWaitingFiles = 0;\n \tvar hotChunksLoading = 0;\n \tvar hotWaitingFilesMap = {};\n \tvar hotRequestedFilesMap = {};\n \tvar hotAvailableFilesMap = {};\n \tvar hotDeferred;\n\n \t// The update info\n \tvar hotUpdate, hotUpdateNewHash;\n\n \tfunction toModuleId(id) {\n \t\tvar isNumber = +id + \"\" === id;\n \t\treturn isNumber ? +id : id;\n \t}\n\n \tfunction hotCheck(apply) {\n \t\tif (hotStatus !== \"idle\") {\n \t\t\tthrow new Error(\"check() is only allowed in idle status\");\n \t\t}\n \t\thotApplyOnUpdate = apply;\n \t\thotSetStatus(\"check\");\n \t\treturn hotDownloadManifest(hotRequestTimeout).then(function(update) {\n \t\t\tif (!update) {\n \t\t\t\thotSetStatus(\"idle\");\n \t\t\t\treturn null;\n \t\t\t}\n \t\t\thotRequestedFilesMap = {};\n \t\t\thotWaitingFilesMap = {};\n \t\t\thotAvailableFilesMap = update.c;\n \t\t\thotUpdateNewHash = update.h;\n\n \t\t\thotSetStatus(\"prepare\");\n \t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\thotDeferred = {\n \t\t\t\t\tresolve: resolve,\n \t\t\t\t\treject: reject\n \t\t\t\t};\n \t\t\t});\n \t\t\thotUpdate = {};\n \t\t\tfor(var chunkId in installedChunks)\n \t\t\t{\n \t\t\t\t// eslint-disable-line no-lone-blocks\n \t\t\t\t/*globals chunkId */\n \t\t\t\thotEnsureUpdateChunk(chunkId);\n \t\t\t}\n \t\t\tif (\n \t\t\t\thotStatus === \"prepare\" &&\n \t\t\t\thotChunksLoading === 0 &&\n \t\t\t\thotWaitingFiles === 0\n \t\t\t) {\n \t\t\t\thotUpdateDownloaded();\n \t\t\t}\n \t\t\treturn promise;\n \t\t});\n \t}\n\n \t// eslint-disable-next-line no-unused-vars\n \tfunction hotAddUpdateChunk(chunkId, moreModules) {\n \t\tif (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])\n \t\t\treturn;\n \t\thotRequestedFilesMap[chunkId] = false;\n \t\tfor (var moduleId in moreModules) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\thotUpdate[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif (--hotWaitingFiles === 0 && hotChunksLoading === 0) {\n \t\t\thotUpdateDownloaded();\n \t\t}\n \t}\n\n \tfunction hotEnsureUpdateChunk(chunkId) {\n \t\tif (!hotAvailableFilesMap[chunkId]) {\n \t\t\thotWaitingFilesMap[chunkId] = true;\n \t\t} else {\n \t\t\thotRequestedFilesMap[chunkId] = true;\n \t\t\thotWaitingFiles++;\n \t\t\thotDownloadUpdateChunk(chunkId);\n \t\t}\n \t}\n\n \tfunction hotUpdateDownloaded() {\n \t\thotSetStatus(\"ready\");\n \t\tvar deferred = hotDeferred;\n \t\thotDeferred = null;\n \t\tif (!deferred) return;\n \t\tif (hotApplyOnUpdate) {\n \t\t\t// Wrap deferred object in Promise to mark it as a well-handled Promise to\n \t\t\t// avoid triggering uncaught exception warning in Chrome.\n \t\t\t// See https://bugs.chromium.org/p/chromium/issues/detail?id=465666\n \t\t\tPromise.resolve()\n \t\t\t\t.then(function() {\n \t\t\t\t\treturn hotApply(hotApplyOnUpdate);\n \t\t\t\t})\n \t\t\t\t.then(\n \t\t\t\t\tfunction(result) {\n \t\t\t\t\t\tdeferred.resolve(result);\n \t\t\t\t\t},\n \t\t\t\t\tfunction(err) {\n \t\t\t\t\t\tdeferred.reject(err);\n \t\t\t\t\t}\n \t\t\t\t);\n \t\t} else {\n \t\t\tvar outdatedModules = [];\n \t\t\tfor (var id in hotUpdate) {\n \t\t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\t\toutdatedModules.push(toModuleId(id));\n \t\t\t\t}\n \t\t\t}\n \t\t\tdeferred.resolve(outdatedModules);\n \t\t}\n \t}\n\n \tfunction hotApply(options) {\n \t\tif (hotStatus !== \"ready\")\n \t\t\tthrow new Error(\"apply() is only allowed in ready status\");\n \t\toptions = options || {};\n\n \t\tvar cb;\n \t\tvar i;\n \t\tvar j;\n \t\tvar module;\n \t\tvar moduleId;\n\n \t\tfunction getAffectedStuff(updateModuleId) {\n \t\t\tvar outdatedModules = [updateModuleId];\n \t\t\tvar outdatedDependencies = {};\n\n \t\t\tvar queue = outdatedModules.slice().map(function(id) {\n \t\t\t\treturn {\n \t\t\t\t\tchain: [id],\n \t\t\t\t\tid: id\n \t\t\t\t};\n \t\t\t});\n \t\t\twhile (queue.length > 0) {\n \t\t\t\tvar queueItem = queue.pop();\n \t\t\t\tvar moduleId = queueItem.id;\n \t\t\t\tvar chain = queueItem.chain;\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (!module || module.hot._selfAccepted) continue;\n \t\t\t\tif (module.hot._selfDeclined) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"self-declined\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tif (module.hot._main) {\n \t\t\t\t\treturn {\n \t\t\t\t\t\ttype: \"unaccepted\",\n \t\t\t\t\t\tchain: chain,\n \t\t\t\t\t\tmoduleId: moduleId\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n \t\t\t\t\tvar parentId = module.parents[i];\n \t\t\t\t\tvar parent = installedModules[parentId];\n \t\t\t\t\tif (!parent) continue;\n \t\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n \t\t\t\t\t\treturn {\n \t\t\t\t\t\t\ttype: \"declined\",\n \t\t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\tparentId: parentId\n \t\t\t\t\t\t};\n \t\t\t\t\t}\n \t\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n \t\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n \t\t\t\t\t\tif (!outdatedDependencies[parentId])\n \t\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n \t\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tdelete outdatedDependencies[parentId];\n \t\t\t\t\toutdatedModules.push(parentId);\n \t\t\t\t\tqueue.push({\n \t\t\t\t\t\tchain: chain.concat([parentId]),\n \t\t\t\t\t\tid: parentId\n \t\t\t\t\t});\n \t\t\t\t}\n \t\t\t}\n\n \t\t\treturn {\n \t\t\t\ttype: \"accepted\",\n \t\t\t\tmoduleId: updateModuleId,\n \t\t\t\toutdatedModules: outdatedModules,\n \t\t\t\toutdatedDependencies: outdatedDependencies\n \t\t\t};\n \t\t}\n\n \t\tfunction addAllToSet(a, b) {\n \t\t\tfor (var i = 0; i < b.length; i++) {\n \t\t\t\tvar item = b[i];\n \t\t\t\tif (a.indexOf(item) === -1) a.push(item);\n \t\t\t}\n \t\t}\n\n \t\t// at begin all updates modules are outdated\n \t\t// the \"outdated\" status can propagate to parents if they don't accept the children\n \t\tvar outdatedDependencies = {};\n \t\tvar outdatedModules = [];\n \t\tvar appliedUpdate = {};\n\n \t\tvar warnUnexpectedRequire = function warnUnexpectedRequire() {\n \t\t\tconsole.warn(\n \t\t\t\t\"[HMR] unexpected require(\" + result.moduleId + \") to disposed module\"\n \t\t\t);\n \t\t};\n\n \t\tfor (var id in hotUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {\n \t\t\t\tmoduleId = toModuleId(id);\n \t\t\t\t/** @type {TODO} */\n \t\t\t\tvar result;\n \t\t\t\tif (hotUpdate[id]) {\n \t\t\t\t\tresult = getAffectedStuff(moduleId);\n \t\t\t\t} else {\n \t\t\t\t\tresult = {\n \t\t\t\t\t\ttype: \"disposed\",\n \t\t\t\t\t\tmoduleId: id\n \t\t\t\t\t};\n \t\t\t\t}\n \t\t\t\t/** @type {Error|false} */\n \t\t\t\tvar abortError = false;\n \t\t\t\tvar doApply = false;\n \t\t\t\tvar doDispose = false;\n \t\t\t\tvar chainInfo = \"\";\n \t\t\t\tif (result.chain) {\n \t\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n \t\t\t\t}\n \t\t\t\tswitch (result.type) {\n \t\t\t\t\tcase \"self-declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"declined\":\n \t\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n \t\t\t\t\t\tif (!options.ignoreDeclined)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n \t\t\t\t\t\t\t\t\tresult.moduleId +\n \t\t\t\t\t\t\t\t\t\" in \" +\n \t\t\t\t\t\t\t\t\tresult.parentId +\n \t\t\t\t\t\t\t\t\tchainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"unaccepted\":\n \t\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n \t\t\t\t\t\tif (!options.ignoreUnaccepted)\n \t\t\t\t\t\t\tabortError = new Error(\n \t\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"accepted\":\n \t\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n \t\t\t\t\t\tdoApply = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tcase \"disposed\":\n \t\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n \t\t\t\t\t\tdoDispose = true;\n \t\t\t\t\t\tbreak;\n \t\t\t\t\tdefault:\n \t\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n \t\t\t\t}\n \t\t\t\tif (abortError) {\n \t\t\t\t\thotSetStatus(\"abort\");\n \t\t\t\t\treturn Promise.reject(abortError);\n \t\t\t\t}\n \t\t\t\tif (doApply) {\n \t\t\t\t\tappliedUpdate[moduleId] = hotUpdate[moduleId];\n \t\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n \t\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n \t\t\t\t\t\tif (\n \t\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(\n \t\t\t\t\t\t\t\tresult.outdatedDependencies,\n \t\t\t\t\t\t\t\tmoduleId\n \t\t\t\t\t\t\t)\n \t\t\t\t\t\t) {\n \t\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n \t\t\t\t\t\t\taddAllToSet(\n \t\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n \t\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n \t\t\t\t\t\t\t);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif (doDispose) {\n \t\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n \t\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Store self accepted outdated modules to require them later by the module system\n \t\tvar outdatedSelfAcceptedModules = [];\n \t\tfor (i = 0; i < outdatedModules.length; i++) {\n \t\t\tmoduleId = outdatedModules[i];\n \t\t\tif (\n \t\t\t\tinstalledModules[moduleId] &&\n \t\t\t\tinstalledModules[moduleId].hot._selfAccepted\n \t\t\t)\n \t\t\t\toutdatedSelfAcceptedModules.push({\n \t\t\t\t\tmodule: moduleId,\n \t\t\t\t\terrorHandler: installedModules[moduleId].hot._selfAccepted\n \t\t\t\t});\n \t\t}\n\n \t\t// Now in \"dispose\" phase\n \t\thotSetStatus(\"dispose\");\n \t\tObject.keys(hotAvailableFilesMap).forEach(function(chunkId) {\n \t\t\tif (hotAvailableFilesMap[chunkId] === false) {\n \t\t\t\thotDisposeChunk(chunkId);\n \t\t\t}\n \t\t});\n\n \t\tvar idx;\n \t\tvar queue = outdatedModules.slice();\n \t\twhile (queue.length > 0) {\n \t\t\tmoduleId = queue.pop();\n \t\t\tmodule = installedModules[moduleId];\n \t\t\tif (!module) continue;\n\n \t\t\tvar data = {};\n\n \t\t\t// Call dispose handlers\n \t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n \t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n \t\t\t\tcb = disposeHandlers[j];\n \t\t\t\tcb(data);\n \t\t\t}\n \t\t\thotCurrentModuleData[moduleId] = data;\n\n \t\t\t// disable module (this disables requires from this module)\n \t\t\tmodule.hot.active = false;\n\n \t\t\t// remove module from cache\n \t\t\tdelete installedModules[moduleId];\n\n \t\t\t// when disposing there is no need to call dispose handler\n \t\t\tdelete outdatedDependencies[moduleId];\n\n \t\t\t// remove \"parents\" references from all children\n \t\t\tfor (j = 0; j < module.children.length; j++) {\n \t\t\t\tvar child = installedModules[module.children[j]];\n \t\t\t\tif (!child) continue;\n \t\t\t\tidx = child.parents.indexOf(moduleId);\n \t\t\t\tif (idx >= 0) {\n \t\t\t\t\tchild.parents.splice(idx, 1);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// remove outdated dependency from module children\n \t\tvar dependency;\n \t\tvar moduleOutdatedDependencies;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n \t\t\t\t\t\tidx = module.children.indexOf(dependency);\n \t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Not in \"apply\" phase\n \t\thotSetStatus(\"apply\");\n\n \t\thotCurrentHash = hotUpdateNewHash;\n\n \t\t// insert new code\n \t\tfor (moduleId in appliedUpdate) {\n \t\t\tif (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {\n \t\t\t\tmodules[moduleId] = appliedUpdate[moduleId];\n \t\t\t}\n \t\t}\n\n \t\t// call accept handlers\n \t\tvar error = null;\n \t\tfor (moduleId in outdatedDependencies) {\n \t\t\tif (\n \t\t\t\tObject.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)\n \t\t\t) {\n \t\t\t\tmodule = installedModules[moduleId];\n \t\t\t\tif (module) {\n \t\t\t\t\tmoduleOutdatedDependencies = outdatedDependencies[moduleId];\n \t\t\t\t\tvar callbacks = [];\n \t\t\t\t\tfor (i = 0; i < moduleOutdatedDependencies.length; i++) {\n \t\t\t\t\t\tdependency = moduleOutdatedDependencies[i];\n \t\t\t\t\t\tcb = module.hot._acceptedDependencies[dependency];\n \t\t\t\t\t\tif (cb) {\n \t\t\t\t\t\t\tif (callbacks.indexOf(cb) !== -1) continue;\n \t\t\t\t\t\t\tcallbacks.push(cb);\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\tfor (i = 0; i < callbacks.length; i++) {\n \t\t\t\t\t\tcb = callbacks[i];\n \t\t\t\t\t\ttry {\n \t\t\t\t\t\t\tcb(moduleOutdatedDependencies);\n \t\t\t\t\t\t} catch (err) {\n \t\t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n \t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\t\tdependencyId: moduleOutdatedDependencies[i],\n \t\t\t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t\t\t});\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// Load self accepted modules\n \t\tfor (i = 0; i < outdatedSelfAcceptedModules.length; i++) {\n \t\t\tvar item = outdatedSelfAcceptedModules[i];\n \t\t\tmoduleId = item.module;\n \t\t\thotCurrentParents = [moduleId];\n \t\t\ttry {\n \t\t\t\t__webpack_require__(moduleId);\n \t\t\t} catch (err) {\n \t\t\t\tif (typeof item.errorHandler === \"function\") {\n \t\t\t\t\ttry {\n \t\t\t\t\t\titem.errorHandler(err);\n \t\t\t\t\t} catch (err2) {\n \t\t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n \t\t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\t\terror: err2,\n \t\t\t\t\t\t\t\toriginalError: err\n \t\t\t\t\t\t\t});\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\t\tif (!error) error = err2;\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tif (options.onErrored) {\n \t\t\t\t\t\toptions.onErrored({\n \t\t\t\t\t\t\ttype: \"self-accept-errored\",\n \t\t\t\t\t\t\tmoduleId: moduleId,\n \t\t\t\t\t\t\terror: err\n \t\t\t\t\t\t});\n \t\t\t\t\t}\n \t\t\t\t\tif (!options.ignoreErrored) {\n \t\t\t\t\t\tif (!error) error = err;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n\n \t\t// handle errors in accept handlers and self accepted module load\n \t\tif (error) {\n \t\t\thotSetStatus(\"fail\");\n \t\t\treturn Promise.reject(error);\n \t\t}\n\n \t\thotSetStatus(\"idle\");\n \t\treturn new Promise(function(resolve) {\n \t\t\tresolve(outdatedModules);\n \t\t});\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"app/\" + chunkId + \".chunk.js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {},\n \t\t\thot: hotCreateModule(moduleId),\n \t\t\tparents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),\n \t\t\tchildren: []\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar head = document.getElementsByTagName('head')[0];\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\thead.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \t// __webpack_hash__\n \t__webpack_require__.h = function() { return hotCurrentHash; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.i(require(\"-!../../../../node_modules/css-loader/index.js!bootstrap/dist/css/bootstrap.min.css\"), \"\");\n\n// module\nexports.push([module.id, \"/* ==============================================================\\r\\nBootstrap tweaks\\r\\n===============================================================*/\\r\\n\\r\\nbody,\\r\\nh1,\\r\\nh2,\\r\\nh3,\\r\\nh4 {\\r\\n  font-weight: 300;\\r\\n}\\r\\n\\r\\nbody {\\r\\n  background: #e4e5e6;\\r\\n}\\r\\n\\r\\na {\\r\\n  color: #533f03;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\na:hover {\\r\\n  color: #533f03;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\nBrowser Upgrade Prompt\\r\\n========================================================================== */\\r\\n.browserupgrade {\\r\\n  margin: 0.2em 0;\\r\\n  background: #ccc;\\r\\n  color: #000;\\r\\n  padding: 0.2em 0;\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\nGeneric styles\\r\\n========================================================================== */\\r\\n\\r\\n/* Temperory workaround for availity-reactstrap-validation */\\r\\n.invalid-feedback {\\r\\n  display: inline;\\r\\n}\\r\\n\\r\\n/* other generic styles */\\r\\n\\r\\n.jh-card {\\r\\n  padding: 1.5%;\\r\\n  margin-top: 20px;\\r\\n  border: none;\\r\\n}\\r\\n\\r\\n.error {\\r\\n  color: white;\\r\\n  background-color: red;\\r\\n}\\r\\n\\r\\n.pad {\\r\\n  padding: 10px;\\r\\n}\\r\\n\\r\\n.w-40 {\\r\\n  width: 40% !important;\\r\\n}\\r\\n\\r\\n.w-60 {\\r\\n  width: 60% !important;\\r\\n}\\r\\n\\r\\n.break {\\r\\n  white-space: normal;\\r\\n  word-break: break-all;\\r\\n}\\r\\n\\r\\n.preserve-space {\\r\\n  white-space: pre-wrap;\\r\\n}\\r\\n\\r\\n.readonly {\\r\\n  background-color: #eee;\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.footer {\\r\\n  border-top: 1px solid rgba(0, 0, 0, 0.125);\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\nmake sure browsers use the pointer cursor for anchors, even with no href\\r\\n========================================================================== */\\r\\na:hover {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.hand,\\r\\n[jhisortby] {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\nCustom alerts for notification\\r\\n========================================================================== */\\r\\n.alerts .alert {\\r\\n  text-overflow: ellipsis;\\r\\n}\\r\\n.alert pre {\\r\\n  background: none;\\r\\n  border: none;\\r\\n  font: inherit;\\r\\n  color: inherit;\\r\\n  padding: 0;\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\n.alert .popover pre {\\r\\n  font-size: 10px;\\r\\n}\\r\\n\\r\\n.alerts .toast {\\r\\n  position: fixed;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.alerts .toast.left {\\r\\n  left: 5px;\\r\\n}\\r\\n\\r\\n.alerts .toast.right {\\r\\n  right: 5px;\\r\\n}\\r\\n\\r\\n.alerts .toast.top {\\r\\n  top: 55px;\\r\\n}\\r\\n\\r\\n.alerts .toast.bottom {\\r\\n  bottom: 55px;\\r\\n}\\r\\n\\r\\n@media screen and (min-width: 480px) {\\r\\n  .alerts .toast {\\r\\n    width: 50%;\\r\\n  }\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\nentity tables helpers\\r\\n========================================================================== */\\r\\n/* Remove Bootstrap padding from the element\\r\\nhttp://stackoverflow.com/questions/19562903/remove-padding-from-columns-in-bootstrap-3 */\\r\\n.no-padding-left {\\r\\n  padding-left: 0 !important;\\r\\n}\\r\\n.no-padding-right {\\r\\n  padding-right: 0 !important;\\r\\n}\\r\\n.no-padding-top {\\r\\n  padding-top: 0 !important;\\r\\n}\\r\\n.no-padding-bottom {\\r\\n  padding-bottom: 0 !important;\\r\\n}\\r\\n.no-padding {\\r\\n  padding: 0 !important;\\r\\n}\\r\\n\\r\\n/* bootstrap 3 input-group 100% width\\r\\nhttp://stackoverflow.com/questions/23436430/bootstrap-3-input-group-100-width */\\r\\n.width-min {\\r\\n  width: 1% !important;\\r\\n}\\r\\n\\r\\n/* Makes toolbar not wrap on smaller screens\\r\\nhttp://www.sketchingwithcss.com/samplechapter/cheatsheet.html#right */\\r\\n.flex-btn-group-container {\\r\\n  display: -webkit-flex;\\r\\n  display: flex;\\r\\n  -webkit-flex-direction: row;\\r\\n  flex-direction: row;\\r\\n  -webkit-justify-content: flex-end;\\r\\n  justify-content: flex-end;\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\nentity detail page css\\r\\n========================================================================== */\\r\\n.row.jh-entity-details > dd {\\r\\n  margin-bottom: 15px;\\r\\n}\\r\\n\\r\\n@media screen and (min-width: 768px) {\\r\\n  .row.jh-entity-details > dt {\\r\\n    margin-bottom: 15px;\\r\\n  }\\r\\n\\r\\n  .row.jh-entity-details > dd {\\r\\n    border-bottom: 1px solid #eee;\\r\\n    padding-left: 180px;\\r\\n    margin-left: 0;\\r\\n  }\\r\\n}\\r\\n\\r\\n/* ==========================================================================\\r\\nui bootstrap tweaks\\r\\n========================================================================== */\\r\\n.nav,\\r\\n.pagination,\\r\\n.carousel,\\r\\n.card-title a {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.datetime-picker-dropdown > li.date-picker-menu div > table .btn-secondary,\\r\\n.uib-datepicker-popup > li > div.uib-datepicker > table .btn-secondary {\\r\\n  border: 0;\\r\\n}\\r\\n\\r\\n.datetime-picker-dropdown > li.date-picker-menu div > table:focus,\\r\\n.uib-datepicker-popup > li > div.uib-datepicker > table:focus {\\r\\n  outline: none;\\r\\n}\\r\\n\\r\\n.thread-dump-modal-lock {\\r\\n  max-width: 450px;\\r\\n  overflow: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n  white-space: nowrap;\\r\\n}\\r\\n\\r\\n/* jhipster-needle-css-add-main JHipster will add new css style */\\r\\n\", \"\"]);\n\n// exports\n","var escape = require(\"../../../../../../node_modules/css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* ==========================================================================\\r\\nMain page styles\\r\\n========================================================================== */\\r\\n.hipster {\\r\\n  display: inline-block;\\r\\n  width: 100%;\\r\\n  height: 497px;\\r\\n  background: url(\" + escape(require(\"../../../static/images/logo-jhipster-react.svg\")) + \") no-repeat center top;\\r\\n  background-size: contain;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".footer {\\r\\n  height: 50px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* ==========================================================================\\r\\nDevelopement Ribbon\\r\\n========================================================================== */\\r\\n.ribbon {\\r\\n  background-color: rgba(170, 0, 0, 0.5);\\r\\n  left: -3.5em;\\r\\n  -moz-transform: rotate(-45deg);\\r\\n  -ms-transform: rotate(-45deg);\\r\\n  -o-transform: rotate(-45deg);\\r\\n  -webkit-transform: rotate(-45deg);\\r\\n  transform: rotate(-45deg);\\r\\n  overflow: hidden;\\r\\n  position: absolute;\\r\\n  top: 30px;\\r\\n  white-space: nowrap;\\r\\n  width: 15em;\\r\\n  z-index: 99999;\\r\\n  pointer-events: none;\\r\\n  opacity: 0.75;\\r\\n}\\r\\n.ribbon a {\\r\\n  color: #fff;\\r\\n  display: block;\\r\\n  font-weight: 400;\\r\\n  margin: 1px 0;\\r\\n  padding: 10px 50px;\\r\\n  text-align: center;\\r\\n  text-decoration: none;\\r\\n  text-shadow: 0 0 5px #444;\\r\\n  pointer-events: none;\\r\\n}\\r\\n/* ==========================================================================\\r\\nNavbar styles\\r\\n========================================================================== */\\r\\n.jh-navbar {\\r\\n  background-color: #353d47;\\r\\n  padding: 0.2em 1em;\\r\\n}\\r\\n.jh-navbar .profile-image {\\r\\n  margin: -10px 0px;\\r\\n  height: 40px;\\r\\n  width: 40px;\\r\\n  border-radius: 50%;\\r\\n}\\r\\n.jh-navbar .dropdown-item.active,\\r\\n.jh-navbar .dropdown-item.active:focus,\\r\\n.jh-navbar .dropdown-item.active:hover {\\r\\n  background-color: #353d47;\\r\\n}\\r\\n.jh-navbar .dropdown-toggle::after {\\r\\n  margin-left: 0.15em;\\r\\n}\\r\\n.jh-navbar ul.navbar-nav {\\r\\n  padding: 0.5em;\\r\\n}\\r\\n.jh-navbar ul.navbar-nav .nav-item {\\r\\n  margin-left: 1.5rem;\\r\\n}\\r\\n.jh-navbar a.nav-link {\\r\\n  font-weight: 400;\\r\\n}\\r\\n.jh-navbar a.nav-link > span {\\r\\n  margin-left: 5px;\\r\\n}\\r\\n.jh-navbar .jh-navbar-toggler {\\r\\n  color: #ccc;\\r\\n  font-size: 1.5em;\\r\\n  padding: 10px;\\r\\n}\\r\\n.jh-navbar .jh-navbar-toggler:hover {\\r\\n  color: #fff;\\r\\n}\\r\\n.navbar-version {\\r\\n  font-size: 10px;\\r\\n  color: #bbb;\\r\\n  padding: 0 0 0 10px;\\r\\n}\\r\\n.brand-logo:hover {\\r\\n  text-decoration: none;\\r\\n}\\r\\n.brand-logo .brand-icon {\\r\\n  height: 35px;\\r\\n  width: auto;\\r\\n  display: inline-block;\\r\\n}\\r\\n.brand-logo .brand-icon img {\\r\\n  height: 45px;\\r\\n}\\r\\n.brand-title {\\r\\n  font-size: 24px;\\r\\n  color: #fff;\\r\\n}\\r\\n.brand-title:hover {\\r\\n  color: #ccc;\\r\\n  text-decoration: none;\\r\\n}\\r\\n.loading-bar {\\r\\n  height: 3px;\\r\\n  background-color: #009cd8;\\r\\n  position: absolute;\\r\\n  top: 0px;\\r\\n  z-index: 1031;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n","exports = module.exports = require(\"../../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* ==========================================================================\\r\\nstart Password strength bar style\\r\\n========================================================================== */\\r\\nul#strengthBar {\\r\\n  display: inline;\\r\\n  list-style: none;\\r\\n  margin: 0;\\r\\n  margin-left: 15px;\\r\\n  padding: 0;\\r\\n  vertical-align: 2px;\\r\\n}\\r\\n\\r\\n.point:last {\\r\\n  margin: 0 !important;\\r\\n}\\r\\n.point {\\r\\n  background: #ddd;\\r\\n  border-radius: 2px;\\r\\n  display: inline-block;\\r\\n  height: 5px;\\r\\n  margin-right: 1px;\\r\\n  width: 20px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","var map = {\n\t\"./log\": \"./node_modules/webpack/hot/log.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/webpack/hot sync ^\\\\.\\\\/log$\";","\nvar content = require(\"!!../../../../node_modules/css-loader/index.js!./app.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/index.js!./app.css\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/index.js!./app.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import 'react-toastify/dist/ReactToastify.css';\r\nimport './app.css';\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Card } from 'reactstrap';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getSession } from 'app/shared/reducers/authentication';\r\nimport { getProfile } from 'app/shared/reducers/application-profile';\r\nimport Header from 'app/shared/layout/header/header';\r\nimport Footer from 'app/shared/layout/footer/footer';\r\nimport { hasAnyAuthority } from 'app/shared/auth/private-route';\r\nimport ErrorBoundary from 'app/shared/error/error-boundary';\r\nimport { AUTHORITIES } from 'app/config/constants';\r\nimport AppRoutes from 'app/routes';\r\n\r\nexport interface IAppProps extends StateProps, DispatchProps {}\r\n\r\nexport class App extends React.Component<IAppProps> {\r\n  componentDidMount() {\r\n    this.props.getSession();\r\n    this.props.getProfile();\r\n  }\r\n\r\n  render() {\r\n    const paddingTop = '60px';\r\n    return (\r\n      <Router>\r\n        <div className=\"app-container\" style={{ paddingTop }}>\r\n          <ToastContainer position={toast.POSITION.TOP_LEFT} className=\"toastify-container\" toastClassName=\"toastify-toast\" />\r\n          <ErrorBoundary>\r\n            <Header\r\n              isAuthenticated={this.props.isAuthenticated}\r\n              isAdmin={this.props.isAdmin}\r\n              ribbonEnv={this.props.ribbonEnv}\r\n              isInProduction={this.props.isInProduction}\r\n              isSwaggerEnabled={this.props.isSwaggerEnabled}\r\n            />\r\n          </ErrorBoundary>\r\n          <div className=\"container-fluid view-container\" id=\"app-view-container\">\r\n            <Card className=\"jh-card\">\r\n              <ErrorBoundary>\r\n                <AppRoutes />\r\n              </ErrorBoundary>\r\n            </Card>\r\n            <Footer />\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ authentication, applicationProfile }: IRootState) => ({\r\n  isAuthenticated: authentication.isAuthenticated,\r\n  isAdmin: hasAnyAuthority(authentication.account.authorities, [AUTHORITIES.ADMIN]),\r\n  ribbonEnv: applicationProfile.ribbonEnv,\r\n  isInProduction: applicationProfile.inProduction,\r\n  isSwaggerEnabled: applicationProfile.isSwaggerEnabled\r\n});\r\n\r\nconst mapDispatchToProps = { getSession, getProfile };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","import axios from 'axios';\r\nimport { getBasePath, Storage } from 'react-jhipster';\r\n\r\nimport { SERVER_API_URL } from 'app/config/constants';\r\n\r\nconst TIMEOUT = 1000000; // 10000\r\nconst setupAxiosInterceptors = onUnauthenticated => {\r\n  const onRequestSuccess = config => {\r\n    const token = Storage.local.get('jhi-authenticationToken') || Storage.session.get('jhi-authenticationToken');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    config.timeout = TIMEOUT;\r\n    config.url = `${SERVER_API_URL}${config.url}`;\r\n    return config;\r\n  };\r\n  const onResponseSuccess = response => response;\r\n  const onResponseError = err => {\r\n    const status = err.status || err.response.status;\r\n    if (status === 403 || status === 401) {\r\n      onUnauthenticated();\r\n    }\r\n    return Promise.reject(err);\r\n  };\r\n  axios.interceptors.request.use(onRequestSuccess);\r\n  axios.interceptors.response.use(onResponseSuccess, onResponseError);\r\n};\r\n\r\nexport default setupAxiosInterceptors;\r\n","const config = {\r\n  VERSION: process.env.VERSION\r\n};\r\n\r\nexport default config;\r\n\r\nexport const SERVER_API_URL = process.env.SERVER_API_URL;\r\n\r\nexport const AUTHORITIES = {\r\n  ADMIN: 'ROLE_ADMIN',\r\n  USER: 'ROLE_USER'\r\n};\r\n\r\nexport const messages = {\r\n  DATA_ERROR_ALERT: 'Internal Error'\r\n};\r\n\r\nexport const APP_DATE_FORMAT = 'DD/MM/YY HH:mm';\r\nexport const APP_TIMESTAMP_FORMAT = 'DD/MM/YY HH:mm:ss';\r\nexport const APP_LOCAL_DATE_FORMAT = 'DD/MM/YYYY';\r\nexport const APP_LOCAL_DATETIME_FORMAT = 'YYYY-MM-DDThh:mm';\r\nexport const APP_WHOLE_NUMBER_FORMAT = '0,0';\r\nexport const APP_TWO_DIGITS_AFTER_POINT_NUMBER_FORMAT = '0,0.[00]';\r\n","import React from 'react';\r\nimport { createDevTools } from 'redux-devtools';\r\nimport LogMonitor from 'redux-devtools-log-monitor';\r\nimport DockMonitor from 'redux-devtools-dock-monitor';\r\n// You can toggle visibility of devTools with ctrl + H\r\n// and change their position with ctrl + Q\r\nexport default createDevTools(\r\n  <DockMonitor toggleVisibilityKey=\"ctrl-h\" changePositionKey=\"ctrl-q\" defaultIsVisible={false}>\r\n    <LogMonitor />\r\n  </DockMonitor>\r\n);\r\n","import { isPromise } from 'react-jhipster';\r\n\r\nconst getErrorMessage = errorData => {\r\n  let message = errorData.message;\r\n  if (errorData.fieldErrors) {\r\n    errorData.fieldErrors.forEach(fErr => {\r\n      message += `\\nfield: ${fErr.field},  Object: ${fErr.objectName}, message: ${fErr.message}\\n`;\r\n    });\r\n  }\r\n  return message;\r\n};\r\n\r\nexport default () => next => action => {\r\n  // If not a promise, continue on\r\n  if (!isPromise(action.payload)) {\r\n    return next(action);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * The error middleware serves to dispatch the initial pending promise to\r\n   * the promise middleware, but adds a `catch`.\r\n   * It need not run in production\r\n   */\r\n  if (process.env.NODE_ENV === 'development') {\r\n    // Dispatch initial pending promise, but catch any errors\r\n    return next(action).catch(error => {\r\n      console.error(`${action.type} caught at middleware with reason: ${JSON.stringify(error.message)}.`);\r\n      if (error && error.response && error.response.data) {\r\n        const message = getErrorMessage(error.response.data);\r\n        console.error(`Actual cause: ${message}`);\r\n      }\r\n\r\n      return Promise.reject(error);\r\n    });\r\n  }\r\n  return next(action);\r\n};\r\n","import { faSort } from '@fortawesome/free-solid-svg-icons/faSort';\r\nimport { faEye } from '@fortawesome/free-solid-svg-icons/faEye';\r\nimport { faSync } from '@fortawesome/free-solid-svg-icons/faSync';\r\nimport { faBan } from '@fortawesome/free-solid-svg-icons/faBan';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons/faTrash';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons/faArrowLeft';\r\nimport { faSave } from '@fortawesome/free-solid-svg-icons/faSave';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons/faPlus';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons/faPencilAlt';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons/faUser';\r\nimport { faHdd } from '@fortawesome/free-solid-svg-icons/faHdd';\r\nimport { faTachometerAlt } from '@fortawesome/free-solid-svg-icons/faTachometerAlt';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons/faHeart';\r\nimport { faList } from '@fortawesome/free-solid-svg-icons/faList';\r\nimport { faTasks } from '@fortawesome/free-solid-svg-icons/faTasks';\r\nimport { faBook } from '@fortawesome/free-solid-svg-icons/faBook';\r\nimport { faClock } from '@fortawesome/free-solid-svg-icons/faClock';\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons/faSignInAlt';\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons/faSignOutAlt';\r\nimport { faThList } from '@fortawesome/free-solid-svg-icons/faThList';\r\nimport { faUserPlus } from '@fortawesome/free-solid-svg-icons/faUserPlus';\r\nimport { faWrench } from '@fortawesome/free-solid-svg-icons/faWrench';\r\nimport { faAsterisk } from '@fortawesome/free-solid-svg-icons/faAsterisk';\r\nimport { faFlag } from '@fortawesome/free-solid-svg-icons/faFlag';\r\nimport { faBell } from '@fortawesome/free-solid-svg-icons/faBell';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons/faHome';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons/faTimesCircle';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons/faSearch';\r\nimport { faRoad } from '@fortawesome/free-solid-svg-icons/faRoad';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\n\r\nexport const loadIcons = () => {\r\n  library.add(\r\n    faSort,\r\n    faEye,\r\n    faSync,\r\n    faBan,\r\n    faTrash,\r\n    faArrowLeft,\r\n    faSave,\r\n    faPlus,\r\n    faPencilAlt,\r\n    faUser,\r\n    faTachometerAlt,\r\n    faHeart,\r\n    faList,\r\n    faTasks,\r\n    faBook,\r\n    faHdd,\r\n    faClock,\r\n    faSignInAlt,\r\n    faSignOutAlt,\r\n    faWrench,\r\n    faThList,\r\n    faUserPlus,\r\n    faAsterisk,\r\n    faFlag,\r\n    faBell,\r\n    faHome,\r\n    faRoad\r\n  );\r\n};\r\n","export default () => next => action => {\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    const { type, payload, meta } = action;\r\n\r\n    console.groupCollapsed(type);\r\n    // tslint:disable-next-line\r\n    console.log('Payload:', payload);\r\n    // tslint:disable-next-line\r\n    console.log('Meta:', meta);\r\n    console.groupEnd();\r\n  }\r\n\r\n  return next(action);\r\n};\r\n","import { isPromise } from 'react-jhipster';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst addErrorAlert = (message, key?, data?) => {\r\n  toast.error(message);\r\n};\r\nexport default () => next => action => {\r\n  // If not a promise, continue on\r\n  if (!isPromise(action.payload)) {\r\n    return next(action);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * The notification middleware serves to dispatch the initial pending promise to\r\n   * the promise middleware, but adds a `then` and `catch.\r\n   */\r\n  return next(action)\r\n    .then(response => {\r\n      if (action.meta && action.meta.successMessage) {\r\n        toast.success(action.meta.successMessage);\r\n      } else if (response && response.action && response.action.payload && response.action.payload.headers) {\r\n        const headers = response.action.payload.headers;\r\n        let alert: string = null;\r\n        Object.entries(headers).forEach(([k, v]: [string, string]) => {\r\n          if (k.endsWith('app-alert')) {\r\n            alert = v;\r\n          }\r\n        });\r\n        if (alert) {\r\n          toast.success(alert);\r\n        }\r\n      }\r\n      return Promise.resolve(response);\r\n    })\r\n    .catch(error => {\r\n      if (action.meta && action.meta.errorMessage) {\r\n        toast.error(action.meta.errorMessage);\r\n      } else if (error && error.response) {\r\n        const response = error.response;\r\n        const data = response.data;\r\n        if (!(response.status === 401 && (error.message === '' || (data && data.path && data.path.includes('/api/account'))))) {\r\n          let i;\r\n          switch (response.status) {\r\n            // connection refused, server not reachable\r\n            case 0:\r\n              addErrorAlert('Server not reachable', 'error.server.not.reachable');\r\n              break;\r\n\r\n            case 400:\r\n              const headers = Object.entries(response.headers);\r\n              let errorHeader = null;\r\n              let entityKey = null;\r\n              headers.forEach(([k, v]: [string, string]) => {\r\n                if (k.endsWith('app-error')) {\r\n                  errorHeader = v;\r\n                } else if (k.endsWith('app-params')) {\r\n                  entityKey = v;\r\n                }\r\n              });\r\n              if (errorHeader) {\r\n                const entityName = entityKey;\r\n                addErrorAlert(errorHeader, errorHeader, { entityName });\r\n              } else if (data !== '' && data.fieldErrors) {\r\n                const fieldErrors = data.fieldErrors;\r\n                for (i = 0; i < fieldErrors.length; i++) {\r\n                  const fieldError = fieldErrors[i];\r\n                  // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\r\n                  const convertedField = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\r\n                  const fieldName = convertedField.charAt(0).toUpperCase() + convertedField.slice(1);\r\n                  addErrorAlert(`Error on field \"${fieldName}\"`, `error.${fieldError.message}`, { fieldName });\r\n                }\r\n              } else if (data !== '' && data.message) {\r\n                addErrorAlert(data.message, data.message, data.params);\r\n              } else {\r\n                addErrorAlert(data);\r\n              }\r\n              break;\r\n\r\n            case 404:\r\n              addErrorAlert('Not found', 'error.url.not.found');\r\n              break;\r\n\r\n            default:\r\n              if (data !== '' && data.message) {\r\n                addErrorAlert(data.message);\r\n              } else {\r\n                addErrorAlert(data);\r\n              }\r\n          }\r\n        }\r\n      } else if (error && error.message) {\r\n        toast.error(error.message);\r\n      } else {\r\n        toast.error('Unknown error!');\r\n      }\r\n      return Promise.reject(error);\r\n    });\r\n};\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport promiseMiddleware from 'redux-promise-middleware';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport reducer, { IRootState } from 'app/shared/reducers';\r\nimport DevTools from './devtools';\r\nimport errorMiddleware from './error-middleware';\r\nimport notificationMiddleware from './notification-middleware';\r\nimport loggerMiddleware from './logger-middleware';\r\nimport { loadingBarMiddleware } from 'react-redux-loading-bar';\r\n\r\nconst defaultMiddlewares = [\r\n  thunkMiddleware,\r\n  errorMiddleware,\r\n  notificationMiddleware,\r\n  promiseMiddleware(),\r\n  loadingBarMiddleware(),\r\n  loggerMiddleware\r\n];\r\nconst composedMiddlewares = middlewares =>\r\n  process.env.NODE_ENV === 'development'\r\n    ? compose(\r\n        applyMiddleware(...defaultMiddlewares, ...middlewares),\r\n        DevTools.instrument()\r\n      )\r\n    : compose(applyMiddleware(...defaultMiddlewares, ...middlewares));\r\n\r\nconst initialize = (initialState?: IRootState, middlewares = []) => createStore(reducer, initialState, composedMiddlewares(middlewares));\r\n\r\nexport default initialize;\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\n// tslint:disable-next-line:no-unused-variable\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport PSEntityTemplate from './ps-entity-template';\r\nimport PSCustomFieldsTemplate from './ps-custom-fields-template';\r\nimport PSEntity from './ps-entity';\r\nimport PSCustomFieldsValues from './ps-custom-fields-values';\r\n/* jhipster-needle-add-route-import - JHipster will add routes here */\r\n\r\nconst Routes = ({ match }) => (\r\n  <div>\r\n    <Switch>\r\n      {/* prettier-ignore */}\r\n      <ErrorBoundaryRoute path={`${match.url}/ps-entity-template`} component={PSEntityTemplate} />\r\n      <ErrorBoundaryRoute path={`${match.url}/ps-custom-fields-template`} component={PSCustomFieldsTemplate} />\r\n      <ErrorBoundaryRoute path={`${match.url}/ps-entity`} component={PSEntity} />\r\n      <ErrorBoundaryRoute path={`${match.url}/ps-custom-fields-values`} component={PSCustomFieldsValues} />\r\n      {/* jhipster-needle-add-route-path - JHipster will routes here */}\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport PSCustomFieldsTemplate from './ps-custom-fields-template';\r\nimport PSCustomFieldsTemplateDetail from './ps-custom-fields-template-detail';\r\nimport PSCustomFieldsTemplateUpdate from './ps-custom-fields-template-update';\r\nimport PSCustomFieldsTemplateDeleteDialog from './ps-custom-fields-template-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={PSCustomFieldsTemplateUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={PSCustomFieldsTemplateUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={PSCustomFieldsTemplateDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={PSCustomFieldsTemplate} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={PSCustomFieldsTemplateDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IPSCustomFieldsTemplate } from 'app/shared/model/ps-custom-fields-template.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './ps-custom-fields-template.reducer';\r\n\r\nexport interface IPSCustomFieldsTemplateDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: number }> {}\r\n\r\nexport class PSCustomFieldsTemplateDeleteDialog extends React.Component<IPSCustomFieldsTemplateDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.pSCustomFieldsTemplateEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { pSCustomFieldsTemplateEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>Confirm delete operation</ModalHeader>\r\n        <ModalBody>Are you sure you want to delete this PSCustomFieldsTemplate?</ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />&nbsp; Cancel\r\n          </Button>\r\n          <Button color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />&nbsp; Delete\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ pSCustomFieldsTemplate }: IRootState) => ({\r\n  pSCustomFieldsTemplateEntity: pSCustomFieldsTemplate.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PSCustomFieldsTemplateDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './ps-custom-fields-template.reducer';\r\nimport { IPSCustomFieldsTemplate } from 'app/shared/model/ps-custom-fields-template.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IPSCustomFieldsTemplateDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: number }> {}\r\n\r\nexport class PSCustomFieldsTemplateDetail extends React.Component<IPSCustomFieldsTemplateDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { pSCustomFieldsTemplateEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            PSCustomFieldsTemplate [<b>{pSCustomFieldsTemplateEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"name\">Name</span>\r\n            </dt>\r\n            <dd>{pSCustomFieldsTemplateEntity.name}</dd>\r\n            <dt>\r\n              <span id=\"type\">Type</span>\r\n            </dt>\r\n            <dd>{pSCustomFieldsTemplateEntity.type}</dd>\r\n            <dt>Psentitytemplateid</dt>\r\n            <dd>{pSCustomFieldsTemplateEntity.psentitytemplateid ? pSCustomFieldsTemplateEntity.psentitytemplateid.id : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/ps-custom-fields-template\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" /> <span className=\"d-none d-md-inline\">Back</span>\r\n          </Button>&nbsp;\r\n          <Button tag={Link} to={`/entity/ps-custom-fields-template/${pSCustomFieldsTemplateEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" /> <span className=\"d-none d-md-inline\">Edit</span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ pSCustomFieldsTemplate }: IRootState) => ({\r\n  pSCustomFieldsTemplateEntity: pSCustomFieldsTemplate.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PSCustomFieldsTemplateDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { IPSEntityTemplate } from 'app/shared/model/ps-entity-template.model';\r\nimport { getEntities as getPSEntityTemplates } from 'app/entities/ps-entity-template/ps-entity-template.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './ps-custom-fields-template.reducer';\r\nimport { IPSCustomFieldsTemplate } from 'app/shared/model/ps-custom-fields-template.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer } from 'app/shared/util/date-utils';\r\nimport { keysToValues } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IPSCustomFieldsTemplateUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: number }> {}\r\n\r\nexport interface IPSCustomFieldsTemplateUpdateState {\r\n  isNew: boolean;\r\n  psentitytemplateidId: number;\r\n}\r\n\r\nexport class PSCustomFieldsTemplateUpdate extends React.Component<IPSCustomFieldsTemplateUpdateProps, IPSCustomFieldsTemplateUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      psentitytemplateidId: 0,\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getPSEntityTemplates();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { pSCustomFieldsTemplateEntity } = this.props;\r\n      const entity = {\r\n        ...pSCustomFieldsTemplateEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n      this.handleClose();\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/ps-custom-fields-template');\r\n  };\r\n\r\n  psentitytemplateidUpdate = element => {\r\n    const id = element.target.value.toString();\r\n    if (id === '') {\r\n      this.setState({\r\n        psentitytemplateidId: -1\r\n      });\r\n    } else {\r\n      for (const i in this.props.pSEntityTemplates) {\r\n        if (id === this.props.pSEntityTemplates[i].id.toString()) {\r\n          this.setState({\r\n            psentitytemplateidId: this.props.pSEntityTemplates[i].id\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { pSCustomFieldsTemplateEntity, pSEntityTemplates, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"jhipster5App.pSCustomFieldsTemplate.home.createOrEditLabel\">Create or edit a PSCustomFieldsTemplate</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : pSCustomFieldsTemplateEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">ID</Label>\r\n                    <AvInput id=\"ps-custom-fields-template-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"nameLabel\" for=\"name\">\r\n                    Name\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"ps-custom-fields-template-name\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: 'This field is required.' }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label id=\"typeLabel\" for=\"type\">\r\n                    Type\r\n                  </Label>\r\n                  <AvField id=\"ps-custom-fields-template-type\" type=\"text\" name=\"type\" />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"psentitytemplateid.id\">Psentitytemplateid</Label>\r\n                  <AvInput\r\n                    id=\"ps-custom-fields-template-psentitytemplateid\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"psentitytemplateid.id\"\r\n                    onChange={this.psentitytemplateidUpdate}\r\n                  >\r\n                    <option value=\"\" key=\"0\" />\r\n                    {pSEntityTemplates\r\n                      ? pSEntityTemplates.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/ps-custom-fields-template\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />&nbsp;\r\n                  <span className=\"d-none d-md-inline\">Back</span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />&nbsp; Save\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  pSEntityTemplates: storeState.pSEntityTemplate.entities,\r\n  pSCustomFieldsTemplateEntity: storeState.pSCustomFieldsTemplate.entity,\r\n  loading: storeState.pSCustomFieldsTemplate.loading,\r\n  updating: storeState.pSCustomFieldsTemplate.updating\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getPSEntityTemplates,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PSCustomFieldsTemplateUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IPSCustomFieldsTemplate, defaultValue } from 'app/shared/model/ps-custom-fields-template.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_PSCUSTOMFIELDSTEMPLATE_LIST: 'pSCustomFieldsTemplate/FETCH_PSCUSTOMFIELDSTEMPLATE_LIST',\r\n  FETCH_PSCUSTOMFIELDSTEMPLATE: 'pSCustomFieldsTemplate/FETCH_PSCUSTOMFIELDSTEMPLATE',\r\n  CREATE_PSCUSTOMFIELDSTEMPLATE: 'pSCustomFieldsTemplate/CREATE_PSCUSTOMFIELDSTEMPLATE',\r\n  UPDATE_PSCUSTOMFIELDSTEMPLATE: 'pSCustomFieldsTemplate/UPDATE_PSCUSTOMFIELDSTEMPLATE',\r\n  DELETE_PSCUSTOMFIELDSTEMPLATE: 'pSCustomFieldsTemplate/DELETE_PSCUSTOMFIELDSTEMPLATE',\r\n  RESET: 'pSCustomFieldsTemplate/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IPSCustomFieldsTemplate>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type PSCustomFieldsTemplateState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: PSCustomFieldsTemplateState = initialState, action): PSCustomFieldsTemplateState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_PSCUSTOMFIELDSTEMPLATE_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_PSCUSTOMFIELDSTEMPLATE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_PSCUSTOMFIELDSTEMPLATE):\r\n    case REQUEST(ACTION_TYPES.UPDATE_PSCUSTOMFIELDSTEMPLATE):\r\n    case REQUEST(ACTION_TYPES.DELETE_PSCUSTOMFIELDSTEMPLATE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_PSCUSTOMFIELDSTEMPLATE_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_PSCUSTOMFIELDSTEMPLATE):\r\n    case FAILURE(ACTION_TYPES.CREATE_PSCUSTOMFIELDSTEMPLATE):\r\n    case FAILURE(ACTION_TYPES.UPDATE_PSCUSTOMFIELDSTEMPLATE):\r\n    case FAILURE(ACTION_TYPES.DELETE_PSCUSTOMFIELDSTEMPLATE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_PSCUSTOMFIELDSTEMPLATE_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_PSCUSTOMFIELDSTEMPLATE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_PSCUSTOMFIELDSTEMPLATE):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_PSCUSTOMFIELDSTEMPLATE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_PSCUSTOMFIELDSTEMPLATE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/ps-custom-fields-templates';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IPSCustomFieldsTemplate> = (page, size, sort) => ({\r\n  type: ACTION_TYPES.FETCH_PSCUSTOMFIELDSTEMPLATE_LIST,\r\n  payload: axios.get<IPSCustomFieldsTemplate>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\r\n});\r\n\r\nexport const getEntity: ICrudGetAction<IPSCustomFieldsTemplate> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_PSCUSTOMFIELDSTEMPLATE,\r\n    payload: axios.get<IPSCustomFieldsTemplate>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IPSCustomFieldsTemplate> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_PSCUSTOMFIELDSTEMPLATE,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IPSCustomFieldsTemplate> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_PSCUSTOMFIELDSTEMPLATE,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IPSCustomFieldsTemplate> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_PSCUSTOMFIELDSTEMPLATE,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { ICrudGetAllAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './ps-custom-fields-template.reducer';\r\nimport { IPSCustomFieldsTemplate } from 'app/shared/model/ps-custom-fields-template.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IPSCustomFieldsTemplateProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport class PSCustomFieldsTemplate extends React.Component<IPSCustomFieldsTemplateProps> {\r\n  componentDidMount() {\r\n    this.props.getEntities();\r\n  }\r\n\r\n  render() {\r\n    const { pSCustomFieldsTemplateList, match } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"ps-custom-fields-template-heading\">\r\n          PS Custom Fields Templates\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />&nbsp; Create new PS Custom Fields Template\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Psentitytemplateid</th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pSCustomFieldsTemplateList.map((pSCustomFieldsTemplate, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${pSCustomFieldsTemplate.id}`} color=\"link\" size=\"sm\">\r\n                      {pSCustomFieldsTemplate.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{pSCustomFieldsTemplate.name}</td>\r\n                  <td>{pSCustomFieldsTemplate.type}</td>\r\n                  <td>\r\n                    {pSCustomFieldsTemplate.psentitytemplateid ? (\r\n                      <Link to={`pSEntityTemplate/${pSCustomFieldsTemplate.psentitytemplateid.id}`}>\r\n                        {pSCustomFieldsTemplate.psentitytemplateid.id}\r\n                      </Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${pSCustomFieldsTemplate.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" /> <span className=\"d-none d-md-inline\">View</span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${pSCustomFieldsTemplate.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" /> <span className=\"d-none d-md-inline\">Edit</span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${pSCustomFieldsTemplate.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" /> <span className=\"d-none d-md-inline\">Delete</span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ pSCustomFieldsTemplate }: IRootState) => ({\r\n  pSCustomFieldsTemplateList: pSCustomFieldsTemplate.entities\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PSCustomFieldsTemplate);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport PSCustomFieldsValues from './ps-custom-fields-values';\r\nimport PSCustomFieldsValuesDetail from './ps-custom-fields-values-detail';\r\nimport PSCustomFieldsValuesUpdate from './ps-custom-fields-values-update';\r\nimport PSCustomFieldsValuesDeleteDialog from './ps-custom-fields-values-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={PSCustomFieldsValuesUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={PSCustomFieldsValuesUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={PSCustomFieldsValuesDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={PSCustomFieldsValues} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={PSCustomFieldsValuesDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IPSCustomFieldsValues } from 'app/shared/model/ps-custom-fields-values.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './ps-custom-fields-values.reducer';\r\n\r\nexport interface IPSCustomFieldsValuesDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: number }> {}\r\n\r\nexport class PSCustomFieldsValuesDeleteDialog extends React.Component<IPSCustomFieldsValuesDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.pSCustomFieldsValuesEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { pSCustomFieldsValuesEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>Confirm delete operation</ModalHeader>\r\n        <ModalBody>Are you sure you want to delete this PSCustomFieldsValues?</ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />&nbsp; Cancel\r\n          </Button>\r\n          <Button color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />&nbsp; Delete\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ pSCustomFieldsValues }: IRootState) => ({\r\n  pSCustomFieldsValuesEntity: pSCustomFieldsValues.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PSCustomFieldsValuesDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './ps-custom-fields-values.reducer';\r\nimport { IPSCustomFieldsValues } from 'app/shared/model/ps-custom-fields-values.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IPSCustomFieldsValuesDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: number }> {}\r\n\r\nexport class PSCustomFieldsValuesDetail extends React.Component<IPSCustomFieldsValuesDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { pSCustomFieldsValuesEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            PSCustomFieldsValues [<b>{pSCustomFieldsValuesEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"value\">Value</span>\r\n            </dt>\r\n            <dd>{pSCustomFieldsValuesEntity.value}</dd>\r\n            <dt>Psentity</dt>\r\n            <dd>{pSCustomFieldsValuesEntity.psentity ? pSCustomFieldsValuesEntity.psentity.id : ''}</dd>\r\n            <dt>Pscustomfieldstemplate</dt>\r\n            <dd>{pSCustomFieldsValuesEntity.pscustomfieldstemplate ? pSCustomFieldsValuesEntity.pscustomfieldstemplate.id : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/ps-custom-fields-values\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" /> <span className=\"d-none d-md-inline\">Back</span>\r\n          </Button>&nbsp;\r\n          <Button tag={Link} to={`/entity/ps-custom-fields-values/${pSCustomFieldsValuesEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" /> <span className=\"d-none d-md-inline\">Edit</span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ pSCustomFieldsValues }: IRootState) => ({\r\n  pSCustomFieldsValuesEntity: pSCustomFieldsValues.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PSCustomFieldsValuesDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { IPSEntity } from 'app/shared/model/ps-entity.model';\r\nimport { getEntities as getPSEntities } from 'app/entities/ps-entity/ps-entity.reducer';\r\nimport { IPSCustomFieldsTemplate } from 'app/shared/model/ps-custom-fields-template.model';\r\nimport { getEntities as getPSCustomFieldsTemplates } from 'app/entities/ps-custom-fields-template/ps-custom-fields-template.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './ps-custom-fields-values.reducer';\r\nimport { IPSCustomFieldsValues } from 'app/shared/model/ps-custom-fields-values.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer } from 'app/shared/util/date-utils';\r\nimport { keysToValues } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IPSCustomFieldsValuesUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: number }> {}\r\n\r\nexport interface IPSCustomFieldsValuesUpdateState {\r\n  isNew: boolean;\r\n  psentityId: number;\r\n  pscustomfieldstemplateId: number;\r\n}\r\n\r\nexport class PSCustomFieldsValuesUpdate extends React.Component<IPSCustomFieldsValuesUpdateProps, IPSCustomFieldsValuesUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      psentityId: 0,\r\n      pscustomfieldstemplateId: 0,\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getPSEntities();\r\n    this.props.getPSCustomFieldsTemplates();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { pSCustomFieldsValuesEntity } = this.props;\r\n      const entity = {\r\n        ...pSCustomFieldsValuesEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n      this.handleClose();\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/ps-custom-fields-values');\r\n  };\r\n\r\n  psentityUpdate = element => {\r\n    const id = element.target.value.toString();\r\n    if (id === '') {\r\n      this.setState({\r\n        psentityId: -1\r\n      });\r\n    } else {\r\n      for (const i in this.props.pSEntities) {\r\n        if (id === this.props.pSEntities[i].id.toString()) {\r\n          this.setState({\r\n            psentityId: this.props.pSEntities[i].id\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  pscustomfieldstemplateUpdate = element => {\r\n    const id = element.target.value.toString();\r\n    if (id === '') {\r\n      this.setState({\r\n        pscustomfieldstemplateId: -1\r\n      });\r\n    } else {\r\n      for (const i in this.props.pSCustomFieldsTemplates) {\r\n        if (id === this.props.pSCustomFieldsTemplates[i].id.toString()) {\r\n          this.setState({\r\n            pscustomfieldstemplateId: this.props.pSCustomFieldsTemplates[i].id\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { pSCustomFieldsValuesEntity, pSEntities, pSCustomFieldsTemplates, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"jhipster5App.pSCustomFieldsValues.home.createOrEditLabel\">Create or edit a PSCustomFieldsValues</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : pSCustomFieldsValuesEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">ID</Label>\r\n                    <AvInput id=\"ps-custom-fields-values-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"valueLabel\" for=\"value\">\r\n                    Value\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"ps-custom-fields-values-value\"\r\n                    type=\"text\"\r\n                    name=\"value\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: 'This field is required.' }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"psentity.id\">Psentity</Label>\r\n                  <AvInput\r\n                    id=\"ps-custom-fields-values-psentity\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"psentity.id\"\r\n                    onChange={this.psentityUpdate}\r\n                  >\r\n                    <option value=\"\" key=\"0\" />\r\n                    {pSEntities\r\n                      ? pSEntities.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"pscustomfieldstemplate.id\">Pscustomfieldstemplate</Label>\r\n                  <AvInput\r\n                    id=\"ps-custom-fields-values-pscustomfieldstemplate\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"pscustomfieldstemplate.id\"\r\n                    onChange={this.pscustomfieldstemplateUpdate}\r\n                  >\r\n                    <option value=\"\" key=\"0\" />\r\n                    {pSCustomFieldsTemplates\r\n                      ? pSCustomFieldsTemplates.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/ps-custom-fields-values\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />&nbsp;\r\n                  <span className=\"d-none d-md-inline\">Back</span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />&nbsp; Save\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  pSEntities: storeState.pSEntity.entities,\r\n  pSCustomFieldsTemplates: storeState.pSCustomFieldsTemplate.entities,\r\n  pSCustomFieldsValuesEntity: storeState.pSCustomFieldsValues.entity,\r\n  loading: storeState.pSCustomFieldsValues.loading,\r\n  updating: storeState.pSCustomFieldsValues.updating\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getPSEntities,\r\n  getPSCustomFieldsTemplates,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PSCustomFieldsValuesUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IPSCustomFieldsValues, defaultValue } from 'app/shared/model/ps-custom-fields-values.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_PSCUSTOMFIELDSVALUES_LIST: 'pSCustomFieldsValues/FETCH_PSCUSTOMFIELDSVALUES_LIST',\r\n  FETCH_PSCUSTOMFIELDSVALUES: 'pSCustomFieldsValues/FETCH_PSCUSTOMFIELDSVALUES',\r\n  CREATE_PSCUSTOMFIELDSVALUES: 'pSCustomFieldsValues/CREATE_PSCUSTOMFIELDSVALUES',\r\n  UPDATE_PSCUSTOMFIELDSVALUES: 'pSCustomFieldsValues/UPDATE_PSCUSTOMFIELDSVALUES',\r\n  DELETE_PSCUSTOMFIELDSVALUES: 'pSCustomFieldsValues/DELETE_PSCUSTOMFIELDSVALUES',\r\n  RESET: 'pSCustomFieldsValues/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IPSCustomFieldsValues>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type PSCustomFieldsValuesState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: PSCustomFieldsValuesState = initialState, action): PSCustomFieldsValuesState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_PSCUSTOMFIELDSVALUES_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_PSCUSTOMFIELDSVALUES):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_PSCUSTOMFIELDSVALUES):\r\n    case REQUEST(ACTION_TYPES.UPDATE_PSCUSTOMFIELDSVALUES):\r\n    case REQUEST(ACTION_TYPES.DELETE_PSCUSTOMFIELDSVALUES):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_PSCUSTOMFIELDSVALUES_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_PSCUSTOMFIELDSVALUES):\r\n    case FAILURE(ACTION_TYPES.CREATE_PSCUSTOMFIELDSVALUES):\r\n    case FAILURE(ACTION_TYPES.UPDATE_PSCUSTOMFIELDSVALUES):\r\n    case FAILURE(ACTION_TYPES.DELETE_PSCUSTOMFIELDSVALUES):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_PSCUSTOMFIELDSVALUES_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_PSCUSTOMFIELDSVALUES):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_PSCUSTOMFIELDSVALUES):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_PSCUSTOMFIELDSVALUES):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_PSCUSTOMFIELDSVALUES):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/ps-custom-fields-values';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IPSCustomFieldsValues> = (page, size, sort) => ({\r\n  type: ACTION_TYPES.FETCH_PSCUSTOMFIELDSVALUES_LIST,\r\n  payload: axios.get<IPSCustomFieldsValues>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\r\n});\r\n\r\nexport const getEntity: ICrudGetAction<IPSCustomFieldsValues> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_PSCUSTOMFIELDSVALUES,\r\n    payload: axios.get<IPSCustomFieldsValues>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IPSCustomFieldsValues> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_PSCUSTOMFIELDSVALUES,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IPSCustomFieldsValues> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_PSCUSTOMFIELDSVALUES,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IPSCustomFieldsValues> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_PSCUSTOMFIELDSVALUES,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { ICrudGetAllAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './ps-custom-fields-values.reducer';\r\nimport { IPSCustomFieldsValues } from 'app/shared/model/ps-custom-fields-values.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IPSCustomFieldsValuesProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport class PSCustomFieldsValues extends React.Component<IPSCustomFieldsValuesProps> {\r\n  componentDidMount() {\r\n    this.props.getEntities();\r\n  }\r\n\r\n  render() {\r\n    const { pSCustomFieldsValuesList, match } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"ps-custom-fields-values-heading\">\r\n          PS Custom Fields Values\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />&nbsp; Create new PS Custom Fields Values\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Value</th>\r\n                <th>Psentity</th>\r\n                <th>Pscustomfieldstemplate</th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pSCustomFieldsValuesList.map((pSCustomFieldsValues, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${pSCustomFieldsValues.id}`} color=\"link\" size=\"sm\">\r\n                      {pSCustomFieldsValues.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{pSCustomFieldsValues.value}</td>\r\n                  <td>\r\n                    {pSCustomFieldsValues.psentity ? (\r\n                      <Link to={`pSEntity/${pSCustomFieldsValues.psentity.id}`}>{pSCustomFieldsValues.psentity.id}</Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {pSCustomFieldsValues.pscustomfieldstemplate ? (\r\n                      <Link to={`pSCustomFieldsTemplate/${pSCustomFieldsValues.pscustomfieldstemplate.id}`}>\r\n                        {pSCustomFieldsValues.pscustomfieldstemplate.id}\r\n                      </Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${pSCustomFieldsValues.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" /> <span className=\"d-none d-md-inline\">View</span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${pSCustomFieldsValues.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" /> <span className=\"d-none d-md-inline\">Edit</span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${pSCustomFieldsValues.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" /> <span className=\"d-none d-md-inline\">Delete</span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ pSCustomFieldsValues }: IRootState) => ({\r\n  pSCustomFieldsValuesList: pSCustomFieldsValues.entities\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PSCustomFieldsValues);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport PSEntityTemplate from './ps-entity-template';\r\nimport PSEntityTemplateDetail from './ps-entity-template-detail';\r\nimport PSEntityTemplateUpdate from './ps-entity-template-update';\r\nimport PSEntityTemplateDeleteDialog from './ps-entity-template-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={PSEntityTemplateUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={PSEntityTemplateUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={PSEntityTemplateDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={PSEntityTemplate} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={PSEntityTemplateDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IPSEntityTemplate } from 'app/shared/model/ps-entity-template.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './ps-entity-template.reducer';\r\n\r\nexport interface IPSEntityTemplateDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: number }> {}\r\n\r\nexport class PSEntityTemplateDeleteDialog extends React.Component<IPSEntityTemplateDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.pSEntityTemplateEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { pSEntityTemplateEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>Confirm delete operation</ModalHeader>\r\n        <ModalBody>Are you sure you want to delete this PSEntityTemplate?</ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />&nbsp; Cancel\r\n          </Button>\r\n          <Button color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />&nbsp; Delete\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ pSEntityTemplate }: IRootState) => ({\r\n  pSEntityTemplateEntity: pSEntityTemplate.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PSEntityTemplateDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './ps-entity-template.reducer';\r\nimport { IPSEntityTemplate } from 'app/shared/model/ps-entity-template.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IPSEntityTemplateDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: number }> {}\r\n\r\nexport class PSEntityTemplateDetail extends React.Component<IPSEntityTemplateDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { pSEntityTemplateEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            PSEntityTemplate [<b>{pSEntityTemplateEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"name\">Name</span>\r\n            </dt>\r\n            <dd>{pSEntityTemplateEntity.name}</dd>\r\n            <dt>Parentid</dt>\r\n            <dd>{pSEntityTemplateEntity.parentid ? pSEntityTemplateEntity.parentid.id : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/ps-entity-template\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" /> <span className=\"d-none d-md-inline\">Back</span>\r\n          </Button>&nbsp;\r\n          <Button tag={Link} to={`/entity/ps-entity-template/${pSEntityTemplateEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" /> <span className=\"d-none d-md-inline\">Edit</span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ pSEntityTemplate }: IRootState) => ({\r\n  pSEntityTemplateEntity: pSEntityTemplate.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PSEntityTemplateDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { getEntities as getPSEntityTemplates } from 'app/entities/ps-entity-template/ps-entity-template.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './ps-entity-template.reducer';\r\nimport { IPSEntityTemplate } from 'app/shared/model/ps-entity-template.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer } from 'app/shared/util/date-utils';\r\nimport { keysToValues } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IPSEntityTemplateUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: number }> {}\r\n\r\nexport interface IPSEntityTemplateUpdateState {\r\n  isNew: boolean;\r\n  pSEntityTemplateId: number;\r\n  parentidId: number;\r\n}\r\n\r\nexport class PSEntityTemplateUpdate extends React.Component<IPSEntityTemplateUpdateProps, IPSEntityTemplateUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pSEntityTemplateId: 0,\r\n      parentidId: 0,\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getPSEntityTemplates();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { pSEntityTemplateEntity } = this.props;\r\n      const entity = {\r\n        ...pSEntityTemplateEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n      this.handleClose();\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/ps-entity-template');\r\n  };\r\n\r\n  parentidUpdate = element => {\r\n    const id = element.target.value.toString();\r\n    if (id === '') {\r\n      this.setState({\r\n        parentidId: -1\r\n      });\r\n    } else {\r\n      for (const i in this.props.pSEntityTemplates) {\r\n        if (id === this.props.pSEntityTemplates[i].id.toString()) {\r\n          this.setState({\r\n            parentidId: this.props.pSEntityTemplates[i].id\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { pSEntityTemplateEntity, pSEntityTemplates, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"jhipster5App.pSEntityTemplate.home.createOrEditLabel\">Create or edit a PSEntityTemplate</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : pSEntityTemplateEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">ID</Label>\r\n                    <AvInput id=\"ps-entity-template-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"nameLabel\" for=\"name\">\r\n                    Name\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"ps-entity-template-name\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: 'This field is required.' }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"parentid.id\">Parentid</Label>\r\n                  <AvInput\r\n                    id=\"ps-entity-template-parentid\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"parentid.id\"\r\n                    onChange={this.parentidUpdate}\r\n                  >\r\n                    <option value=\"\" key=\"0\" />\r\n                    {pSEntityTemplates\r\n                      ? pSEntityTemplates.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/ps-entity-template\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />&nbsp;\r\n                  <span className=\"d-none d-md-inline\">Back</span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />&nbsp; Save\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  pSEntityTemplates: storeState.pSEntityTemplate.entities,\r\n  pSEntityTemplateEntity: storeState.pSEntityTemplate.entity,\r\n  loading: storeState.pSEntityTemplate.loading,\r\n  updating: storeState.pSEntityTemplate.updating\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getPSEntityTemplates,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PSEntityTemplateUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IPSEntityTemplate, defaultValue } from 'app/shared/model/ps-entity-template.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_PSENTITYTEMPLATE_LIST: 'pSEntityTemplate/FETCH_PSENTITYTEMPLATE_LIST',\r\n  FETCH_PSENTITYTEMPLATE: 'pSEntityTemplate/FETCH_PSENTITYTEMPLATE',\r\n  CREATE_PSENTITYTEMPLATE: 'pSEntityTemplate/CREATE_PSENTITYTEMPLATE',\r\n  UPDATE_PSENTITYTEMPLATE: 'pSEntityTemplate/UPDATE_PSENTITYTEMPLATE',\r\n  DELETE_PSENTITYTEMPLATE: 'pSEntityTemplate/DELETE_PSENTITYTEMPLATE',\r\n  RESET: 'pSEntityTemplate/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IPSEntityTemplate>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type PSEntityTemplateState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: PSEntityTemplateState = initialState, action): PSEntityTemplateState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_PSENTITYTEMPLATE_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_PSENTITYTEMPLATE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_PSENTITYTEMPLATE):\r\n    case REQUEST(ACTION_TYPES.UPDATE_PSENTITYTEMPLATE):\r\n    case REQUEST(ACTION_TYPES.DELETE_PSENTITYTEMPLATE):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_PSENTITYTEMPLATE_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_PSENTITYTEMPLATE):\r\n    case FAILURE(ACTION_TYPES.CREATE_PSENTITYTEMPLATE):\r\n    case FAILURE(ACTION_TYPES.UPDATE_PSENTITYTEMPLATE):\r\n    case FAILURE(ACTION_TYPES.DELETE_PSENTITYTEMPLATE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_PSENTITYTEMPLATE_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_PSENTITYTEMPLATE):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_PSENTITYTEMPLATE):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_PSENTITYTEMPLATE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_PSENTITYTEMPLATE):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/ps-entity-templates';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IPSEntityTemplate> = (page, size, sort) => ({\r\n  type: ACTION_TYPES.FETCH_PSENTITYTEMPLATE_LIST,\r\n  payload: axios.get<IPSEntityTemplate>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\r\n});\r\n\r\nexport const getEntity: ICrudGetAction<IPSEntityTemplate> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_PSENTITYTEMPLATE,\r\n    payload: axios.get<IPSEntityTemplate>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IPSEntityTemplate> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_PSENTITYTEMPLATE,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IPSEntityTemplate> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_PSENTITYTEMPLATE,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IPSEntityTemplate> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_PSENTITYTEMPLATE,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { ICrudGetAllAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './ps-entity-template.reducer';\r\nimport { IPSEntityTemplate } from 'app/shared/model/ps-entity-template.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IPSEntityTemplateProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport class PSEntityTemplate extends React.Component<IPSEntityTemplateProps> {\r\n  componentDidMount() {\r\n    this.props.getEntities();\r\n  }\r\n\r\n  render() {\r\n    const { pSEntityTemplateList, match } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"ps-entity-template-heading\">\r\n          PS Entity Templates\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />&nbsp; Create new PS Entity Template\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>Parentid</th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pSEntityTemplateList.map((pSEntityTemplate, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${pSEntityTemplate.id}`} color=\"link\" size=\"sm\">\r\n                      {pSEntityTemplate.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{pSEntityTemplate.name}</td>\r\n                  <td>\r\n                    {pSEntityTemplate.parentid ? (\r\n                      <Link to={`pSEntityTemplate/${pSEntityTemplate.parentid.id}`}>{pSEntityTemplate.parentid.id}</Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${pSEntityTemplate.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" /> <span className=\"d-none d-md-inline\">View</span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${pSEntityTemplate.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" /> <span className=\"d-none d-md-inline\">Edit</span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${pSEntityTemplate.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" /> <span className=\"d-none d-md-inline\">Delete</span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ pSEntityTemplate }: IRootState) => ({\r\n  pSEntityTemplateList: pSEntityTemplate.entities\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PSEntityTemplate);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\n\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\n\r\nimport PSEntity from './ps-entity';\r\nimport PSEntityDetail from './ps-entity-detail';\r\nimport PSEntityUpdate from './ps-entity-update';\r\nimport PSEntityDeleteDialog from './ps-entity-delete-dialog';\r\n\r\nconst Routes = ({ match }) => (\r\n  <>\r\n    <Switch>\r\n      <ErrorBoundaryRoute exact path={`${match.url}/new`} component={PSEntityUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id/edit`} component={PSEntityUpdate} />\r\n      <ErrorBoundaryRoute exact path={`${match.url}/:id`} component={PSEntityDetail} />\r\n      <ErrorBoundaryRoute path={match.url} component={PSEntity} />\r\n    </Switch>\r\n    <ErrorBoundaryRoute path={`${match.url}/:id/delete`} component={PSEntityDeleteDialog} />\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from 'reactstrap';\r\nimport { ICrudGetAction, ICrudDeleteAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IPSEntity } from 'app/shared/model/ps-entity.model';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity, deleteEntity } from './ps-entity.reducer';\r\n\r\nexport interface IPSEntityDeleteDialogProps extends StateProps, DispatchProps, RouteComponentProps<{ id: number }> {}\r\n\r\nexport class PSEntityDeleteDialog extends React.Component<IPSEntityDeleteDialogProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  confirmDelete = event => {\r\n    this.props.deleteEntity(this.props.pSEntityEntity.id);\r\n    this.handleClose(event);\r\n  };\r\n\r\n  handleClose = event => {\r\n    event.stopPropagation();\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  render() {\r\n    const { pSEntityEntity } = this.props;\r\n    return (\r\n      <Modal isOpen toggle={this.handleClose}>\r\n        <ModalHeader toggle={this.handleClose}>Confirm delete operation</ModalHeader>\r\n        <ModalBody>Are you sure you want to delete this PSEntity?</ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"secondary\" onClick={this.handleClose}>\r\n            <FontAwesomeIcon icon=\"ban\" />&nbsp; Cancel\r\n          </Button>\r\n          <Button color=\"danger\" onClick={this.confirmDelete}>\r\n            <FontAwesomeIcon icon=\"trash\" />&nbsp; Delete\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ pSEntity }: IRootState) => ({\r\n  pSEntityEntity: pSEntity.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity, deleteEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PSEntityDeleteDialog);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { ICrudGetAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntity } from './ps-entity.reducer';\r\nimport { IPSEntity } from 'app/shared/model/ps-entity.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IPSEntityDetailProps extends StateProps, DispatchProps, RouteComponentProps<{ id: number }> {}\r\n\r\nexport class PSEntityDetail extends React.Component<IPSEntityDetailProps> {\r\n  componentDidMount() {\r\n    this.props.getEntity(this.props.match.params.id);\r\n  }\r\n\r\n  render() {\r\n    const { pSEntityEntity } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"8\">\r\n          <h2>\r\n            PSEntity [<b>{pSEntityEntity.id}</b>]\r\n          </h2>\r\n          <dl className=\"jh-entity-details\">\r\n            <dt>\r\n              <span id=\"name\">Name</span>\r\n            </dt>\r\n            <dd>{pSEntityEntity.name}</dd>\r\n            <dt>Psentitytemplateid</dt>\r\n            <dd>{pSEntityEntity.psentitytemplateid ? pSEntityEntity.psentitytemplateid.id : ''}</dd>\r\n          </dl>\r\n          <Button tag={Link} to=\"/entity/ps-entity\" replace color=\"info\">\r\n            <FontAwesomeIcon icon=\"arrow-left\" /> <span className=\"d-none d-md-inline\">Back</span>\r\n          </Button>&nbsp;\r\n          <Button tag={Link} to={`/entity/ps-entity/${pSEntityEntity.id}/edit`} replace color=\"primary\">\r\n            <FontAwesomeIcon icon=\"pencil-alt\" /> <span className=\"d-none d-md-inline\">Edit</span>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ pSEntity }: IRootState) => ({\r\n  pSEntityEntity: pSEntity.entity\r\n});\r\n\r\nconst mapDispatchToProps = { getEntity };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PSEntityDetail);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Row, Col, Label } from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvField } from 'availity-reactstrap-validation';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { IRootState } from 'app/shared/reducers';\r\n\r\nimport { IPSEntityTemplate } from 'app/shared/model/ps-entity-template.model';\r\nimport { getEntities as getPSEntityTemplates } from 'app/entities/ps-entity-template/ps-entity-template.reducer';\r\nimport { getEntity, updateEntity, createEntity, reset } from './ps-entity.reducer';\r\nimport { IPSEntity } from 'app/shared/model/ps-entity.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { convertDateTimeFromServer } from 'app/shared/util/date-utils';\r\nimport { keysToValues } from 'app/shared/util/entity-utils';\r\n\r\nexport interface IPSEntityUpdateProps extends StateProps, DispatchProps, RouteComponentProps<{ id: number }> {}\r\n\r\nexport interface IPSEntityUpdateState {\r\n  isNew: boolean;\r\n  psentitytemplateidId: number;\r\n}\r\n\r\nexport class PSEntityUpdate extends React.Component<IPSEntityUpdateProps, IPSEntityUpdateState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      psentitytemplateidId: 0,\r\n      isNew: !this.props.match.params || !this.props.match.params.id\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.isNew) {\r\n      this.props.reset();\r\n    } else {\r\n      this.props.getEntity(this.props.match.params.id);\r\n    }\r\n\r\n    this.props.getPSEntityTemplates();\r\n  }\r\n\r\n  saveEntity = (event, errors, values) => {\r\n    if (errors.length === 0) {\r\n      const { pSEntityEntity } = this.props;\r\n      const entity = {\r\n        ...pSEntityEntity,\r\n        ...values\r\n      };\r\n\r\n      if (this.state.isNew) {\r\n        this.props.createEntity(entity);\r\n      } else {\r\n        this.props.updateEntity(entity);\r\n      }\r\n      this.handleClose();\r\n    }\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.history.push('/entity/ps-entity');\r\n  };\r\n\r\n  psentitytemplateidUpdate = element => {\r\n    const id = element.target.value.toString();\r\n    if (id === '') {\r\n      this.setState({\r\n        psentitytemplateidId: -1\r\n      });\r\n    } else {\r\n      for (const i in this.props.pSEntityTemplates) {\r\n        if (id === this.props.pSEntityTemplates[i].id.toString()) {\r\n          this.setState({\r\n            psentitytemplateidId: this.props.pSEntityTemplates[i].id\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { pSEntityEntity, pSEntityTemplates, loading, updating } = this.props;\r\n    const { isNew } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h2 id=\"jhipster5App.pSEntity.home.createOrEditLabel\">Create or edit a PSEntity</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            {loading ? (\r\n              <p>Loading...</p>\r\n            ) : (\r\n              <AvForm model={isNew ? {} : pSEntityEntity} onSubmit={this.saveEntity}>\r\n                {!isNew ? (\r\n                  <AvGroup>\r\n                    <Label for=\"id\">ID</Label>\r\n                    <AvInput id=\"ps-entity-id\" type=\"text\" className=\"form-control\" name=\"id\" required readOnly />\r\n                  </AvGroup>\r\n                ) : null}\r\n                <AvGroup>\r\n                  <Label id=\"nameLabel\" for=\"name\">\r\n                    Name\r\n                  </Label>\r\n                  <AvField\r\n                    id=\"ps-entity-name\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    validate={{\r\n                      required: { value: true, errorMessage: 'This field is required.' }\r\n                    }}\r\n                  />\r\n                </AvGroup>\r\n                <AvGroup>\r\n                  <Label for=\"psentitytemplateid.id\">Psentitytemplateid</Label>\r\n                  <AvInput\r\n                    id=\"ps-entity-psentitytemplateid\"\r\n                    type=\"select\"\r\n                    className=\"form-control\"\r\n                    name=\"psentitytemplateid.id\"\r\n                    onChange={this.psentitytemplateidUpdate}\r\n                  >\r\n                    <option value=\"\" key=\"0\" />\r\n                    {pSEntityTemplates\r\n                      ? pSEntityTemplates.map(otherEntity => (\r\n                          <option value={otherEntity.id} key={otherEntity.id}>\r\n                            {otherEntity.id}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </AvInput>\r\n                </AvGroup>\r\n                <Button tag={Link} id=\"cancel-save\" to=\"/entity/ps-entity\" replace color=\"info\">\r\n                  <FontAwesomeIcon icon=\"arrow-left\" />&nbsp;\r\n                  <span className=\"d-none d-md-inline\">Back</span>\r\n                </Button>\r\n                &nbsp;\r\n                <Button color=\"primary\" id=\"save-entity\" type=\"submit\" disabled={updating}>\r\n                  <FontAwesomeIcon icon=\"save\" />&nbsp; Save\r\n                </Button>\r\n              </AvForm>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({\r\n  pSEntityTemplates: storeState.pSEntityTemplate.entities,\r\n  pSEntityEntity: storeState.pSEntity.entity,\r\n  loading: storeState.pSEntity.loading,\r\n  updating: storeState.pSEntity.updating\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getPSEntityTemplates,\r\n  getEntity,\r\n  updateEntity,\r\n  createEntity,\r\n  reset\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PSEntityUpdate);\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { cleanEntity } from 'app/shared/util/entity-utils';\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nimport { IPSEntity, defaultValue } from 'app/shared/model/ps-entity.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_PSENTITY_LIST: 'pSEntity/FETCH_PSENTITY_LIST',\r\n  FETCH_PSENTITY: 'pSEntity/FETCH_PSENTITY',\r\n  CREATE_PSENTITY: 'pSEntity/CREATE_PSENTITY',\r\n  UPDATE_PSENTITY: 'pSEntity/UPDATE_PSENTITY',\r\n  DELETE_PSENTITY: 'pSEntity/DELETE_PSENTITY',\r\n  RESET: 'pSEntity/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  entities: [] as ReadonlyArray<IPSEntity>,\r\n  entity: defaultValue,\r\n  updating: false,\r\n  updateSuccess: false\r\n};\r\n\r\nexport type PSEntityState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: PSEntityState = initialState, action): PSEntityState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_PSENTITY_LIST):\r\n    case REQUEST(ACTION_TYPES.FETCH_PSENTITY):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_PSENTITY):\r\n    case REQUEST(ACTION_TYPES.UPDATE_PSENTITY):\r\n    case REQUEST(ACTION_TYPES.DELETE_PSENTITY):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_PSENTITY_LIST):\r\n    case FAILURE(ACTION_TYPES.FETCH_PSENTITY):\r\n    case FAILURE(ACTION_TYPES.CREATE_PSENTITY):\r\n    case FAILURE(ACTION_TYPES.UPDATE_PSENTITY):\r\n    case FAILURE(ACTION_TYPES.DELETE_PSENTITY):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_PSENTITY_LIST):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_PSENTITY):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_PSENTITY):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_PSENTITY):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_PSENTITY):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        entity: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/ps-entities';\r\n\r\n// Actions\r\n\r\nexport const getEntities: ICrudGetAllAction<IPSEntity> = (page, size, sort) => ({\r\n  type: ACTION_TYPES.FETCH_PSENTITY_LIST,\r\n  payload: axios.get<IPSEntity>(`${apiUrl}?cacheBuster=${new Date().getTime()}`)\r\n});\r\n\r\nexport const getEntity: ICrudGetAction<IPSEntity> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_PSENTITY,\r\n    payload: axios.get<IPSEntity>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createEntity: ICrudPutAction<IPSEntity> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_PSENTITY,\r\n    payload: axios.post(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const updateEntity: ICrudPutAction<IPSEntity> = entity => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_PSENTITY,\r\n    payload: axios.put(apiUrl, cleanEntity(entity))\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const deleteEntity: ICrudDeleteAction<IPSEntity> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_PSENTITY,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getEntities());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Button, Col, Row, Table } from 'reactstrap';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { ICrudGetAllAction } from 'react-jhipster';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getEntities } from './ps-entity.reducer';\r\nimport { IPSEntity } from 'app/shared/model/ps-entity.model';\r\n// tslint:disable-next-line:no-unused-variable\r\nimport { APP_DATE_FORMAT, APP_LOCAL_DATE_FORMAT } from 'app/config/constants';\r\n\r\nexport interface IPSEntityProps extends StateProps, DispatchProps, RouteComponentProps<{ url: string }> {}\r\n\r\nexport class PSEntity extends React.Component<IPSEntityProps> {\r\n  componentDidMount() {\r\n    this.props.getEntities();\r\n  }\r\n\r\n  render() {\r\n    const { pSEntityList, match } = this.props;\r\n    return (\r\n      <div>\r\n        <h2 id=\"ps-entity-heading\">\r\n          PS Entities\r\n          <Link to={`${match.url}/new`} className=\"btn btn-primary float-right jh-create-entity\" id=\"jh-create-entity\">\r\n            <FontAwesomeIcon icon=\"plus\" />&nbsp; Create new PS Entity\r\n          </Link>\r\n        </h2>\r\n        <div className=\"table-responsive\">\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>Psentitytemplateid</th>\r\n                <th />\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {pSEntityList.map((pSEntity, i) => (\r\n                <tr key={`entity-${i}`}>\r\n                  <td>\r\n                    <Button tag={Link} to={`${match.url}/${pSEntity.id}`} color=\"link\" size=\"sm\">\r\n                      {pSEntity.id}\r\n                    </Button>\r\n                  </td>\r\n                  <td>{pSEntity.name}</td>\r\n                  <td>\r\n                    {pSEntity.psentitytemplateid ? (\r\n                      <Link to={`pSEntityTemplate/${pSEntity.psentitytemplateid.id}`}>{pSEntity.psentitytemplateid.id}</Link>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                  </td>\r\n                  <td className=\"text-right\">\r\n                    <div className=\"btn-group flex-btn-group-container\">\r\n                      <Button tag={Link} to={`${match.url}/${pSEntity.id}`} color=\"info\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"eye\" /> <span className=\"d-none d-md-inline\">View</span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${pSEntity.id}/edit`} color=\"primary\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"pencil-alt\" /> <span className=\"d-none d-md-inline\">Edit</span>\r\n                      </Button>\r\n                      <Button tag={Link} to={`${match.url}/${pSEntity.id}/delete`} color=\"danger\" size=\"sm\">\r\n                        <FontAwesomeIcon icon=\"trash\" /> <span className=\"d-none d-md-inline\">Delete</span>\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ pSEntity }: IRootState) => ({\r\n  pSEntityList: pSEntity.entities\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  getEntities\r\n};\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PSEntity);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { AppContainer } from 'react-hot-loader';\r\n\r\nimport DevTools from './config/devtools';\r\nimport initStore from './config/store';\r\nimport setupAxiosInterceptors from './config/axios-interceptor';\r\nimport { clearAuthentication } from './shared/reducers/authentication';\r\nimport ErrorBoundary from './shared/error/error-boundary';\r\nimport AppComponent from './app';\r\nimport { loadIcons } from './config/icon-loader';\r\n\r\nconst devTools = process.env.NODE_ENV === 'development' ? <DevTools /> : null;\r\n\r\nconst store = initStore();\r\n\r\nconst actions = bindActionCreators({ clearAuthentication }, store.dispatch);\r\nsetupAxiosInterceptors(() => actions.clearAuthentication('login.error.unauthorized'));\r\n\r\nloadIcons();\r\n\r\nconst rootEl = document.getElementById('root');\r\n\r\nconst render = Component =>\r\n  ReactDOM.render(\r\n    <ErrorBoundary>\r\n      <AppContainer>\r\n        <Provider store={store}>\r\n          <div>\r\n            {/* If this slows down the app in dev disable it and enable when required  */}\r\n            {devTools}\r\n            <Component />\r\n          </div>\r\n        </Provider>\r\n      </AppContainer>\r\n    </ErrorBoundary>,\r\n    rootEl\r\n  );\r\n\r\nrender(AppComponent);\r\n\r\n// This is quite unstable\r\n// if (module.hot) {\r\n//   module.hot.accept('./app', () => {\r\n//     const NextApp = require<{ default: typeof AppComponent }>('./app').default;\r\n//     render(NextApp);\r\n//   });\r\n// }\r\n","import axios from 'axios';\r\n\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nexport const ACTION_TYPES = {\r\n  ACTIVATE_ACCOUNT: 'activate/ACTIVATE_ACCOUNT',\r\n  RESET: 'activate/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  activationSuccess: false,\r\n  activationFailure: false\r\n};\r\n\r\nexport type ActivateState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\nexport default (state: ActivateState = initialState, action): ActivateState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.ACTIVATE_ACCOUNT):\r\n      return {\r\n        ...state\r\n      };\r\n    case FAILURE(ACTION_TYPES.ACTIVATE_ACCOUNT):\r\n      return {\r\n        ...state,\r\n        activationFailure: true\r\n      };\r\n    case SUCCESS(ACTION_TYPES.ACTIVATE_ACCOUNT):\r\n      return {\r\n        ...state,\r\n        activationSuccess: true\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Actions\r\nexport const activateAction = key => ({\r\n  type: ACTION_TYPES.ACTIVATE_ACCOUNT,\r\n  payload: axios.get('api/activate?key=' + key)\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link, RouteComponentProps } from 'react-router-dom';\r\nimport { Row, Col, Alert } from 'reactstrap';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { activateAction, reset } from './activate.reducer';\r\n\r\nconst successAlert = (\r\n  <Alert color=\"success\">\r\n    <strong>Your user account has been activated.</strong> Please\r\n    <Link to=\"/login\" className=\"alert-link\">\r\n      sign in\r\n    </Link>.\r\n  </Alert>\r\n);\r\n\r\nconst failureAlert = (\r\n  <Alert color=\"danger\">\r\n    <strong>Your user could not be activated.</strong> Please use the registration form to sign up.\r\n  </Alert>\r\n);\r\n\r\nexport interface IActivateProps extends StateProps, DispatchProps, RouteComponentProps<{ key: any }> {}\r\n\r\nexport class ActivatePage extends React.Component<IActivateProps> {\r\n  componentWillUnmount() {\r\n    this.props.reset();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { key } = this.props.match.params;\r\n    this.props.activateAction(key);\r\n  }\r\n\r\n  render() {\r\n    const { activationSuccess, activationFailure } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h1>Activation</h1>\r\n            {activationSuccess ? successAlert : undefined}\r\n            {activationFailure ? failureAlert : undefined}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ activate }: IRootState) => ({\r\n  activationSuccess: activate.activationSuccess,\r\n  activationFailure: activate.activationFailure\r\n});\r\n\r\nconst mapDispatchToProps = { activateAction, reset };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ActivatePage);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Alert, Col, Row, Button } from 'reactstrap';\r\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\r\n\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { handlePasswordResetFinish, reset } from '../password-reset.reducer';\r\nimport PasswordStrengthBar from 'app/shared/layout/password/password-strength-bar';\r\n\r\nexport interface IPasswordResetFinishProps extends DispatchProps, RouteComponentProps<{ key: string }> {}\r\n\r\nexport interface IPasswordResetFinishState {\r\n  password: string;\r\n  key: string;\r\n}\r\n\r\nexport class PasswordResetFinishPage extends React.Component<IPasswordResetFinishProps, IPasswordResetFinishState> {\r\n  state: IPasswordResetFinishState = {\r\n    password: '',\r\n    key: this.props.match.params.key\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.reset();\r\n  }\r\n\r\n  handleValidSubmit = (event, values) => {\r\n    this.props.handlePasswordResetFinish(this.state.key, values.newPassword);\r\n  };\r\n\r\n  updatePassword = event => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  getResetForm() {\r\n    return (\r\n      <AvForm onValidSubmit={this.handleValidSubmit}>\r\n        <AvField\r\n          name=\"newPassword\"\r\n          label=\"New password\"\r\n          placeholder={'New password'}\r\n          type=\"password\"\r\n          validate={{\r\n            required: { value: true, errorMessage: 'Your password is required.' },\r\n            minLength: { value: 4, errorMessage: 'Your password is required to be at least 4 characters.' },\r\n            maxLength: { value: 50, errorMessage: 'Your password cannot be longer than 50 characters.' }\r\n          }}\r\n          onChange={this.updatePassword}\r\n        />\r\n        <PasswordStrengthBar password={this.state.password} />\r\n        <AvField\r\n          name=\"confirmPassword\"\r\n          label=\"New password confirmation\"\r\n          placeholder=\"Confirm the new password\"\r\n          type=\"password\"\r\n          validate={{\r\n            required: { value: true, errorMessage: 'Your confirmation password is required.' },\r\n            minLength: { value: 4, errorMessage: 'Your confirmation password is required to be at least 4 characters.' },\r\n            maxLength: { value: 50, errorMessage: 'Your confirmation password cannot be longer than 50 characters.' },\r\n            match: { value: 'newPassword', errorMessage: 'The password and its confirmation do not match!' }\r\n          }}\r\n        />\r\n        <Button color=\"success\" type=\"submit\">\r\n          Validate new password\r\n        </Button>\r\n      </AvForm>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { key } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"4\">\r\n            <h1>Reset password</h1>\r\n            <div>{key ? this.getResetForm() : null}</div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = { handlePasswordResetFinish, reset };\r\n\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(PasswordResetFinishPage);\r\n","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\r\nimport { Button, Alert, Col, Row } from 'reactstrap';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { handlePasswordResetInit, reset } from '../password-reset.reducer';\r\n\r\nexport type IPasswordResetInitProps = DispatchProps;\r\n\r\nexport class PasswordResetInit extends React.Component<IPasswordResetInitProps> {\r\n  componentWillUnmount() {\r\n    this.props.reset();\r\n  }\r\n\r\n  handleValidSubmit = (event, values) => {\r\n    this.props.handlePasswordResetInit(values.email);\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h1>Reset your password</h1>\r\n            <Alert color=\"warning\">\r\n              <p>Enter the email address you used to register</p>\r\n            </Alert>\r\n            <AvForm onValidSubmit={this.handleValidSubmit}>\r\n              <AvField\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                placeholder=\"Your email\"\r\n                type=\"email\"\r\n                validate={{\r\n                  required: { value: true, errorMessage: 'Your email is required.' },\r\n                  minLength: { value: 5, errorMessage: 'Your email is required to be at least 5 characters.' },\r\n                  maxLength: { value: 254, errorMessage: 'Your email cannot be longer than 50 characters.' }\r\n                }}\r\n              />\r\n              <Button color=\"primary\" type=\"submit\">\r\n                Reset password\r\n              </Button>\r\n            </AvForm>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = { handlePasswordResetInit, reset };\r\n\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(PasswordResetInit);\r\n","import axios from 'axios';\r\n\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nexport const ACTION_TYPES = {\r\n  RESET_PASSWORD_INIT: 'passwordReset/RESET_PASSWORD_INIT',\r\n  RESET_PASSWORD_FINISH: 'passwordReset/RESET_PASSWORD_FINISH',\r\n  RESET: 'passwordReset/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  resetPasswordSuccess: false,\r\n  resetPasswordFailure: false\r\n};\r\n\r\nexport type PasswordResetState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\nexport default (state: PasswordResetState = initialState, action): PasswordResetState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.RESET_PASSWORD_FINISH):\r\n    case REQUEST(ACTION_TYPES.RESET_PASSWORD_INIT):\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.RESET_PASSWORD_FINISH):\r\n    case FAILURE(ACTION_TYPES.RESET_PASSWORD_INIT):\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        resetPasswordFailure: true\r\n      };\r\n    case SUCCESS(ACTION_TYPES.RESET_PASSWORD_FINISH):\r\n    case SUCCESS(ACTION_TYPES.RESET_PASSWORD_INIT):\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        resetPasswordSuccess: true\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/account/reset-password';\r\n\r\n// Actions\r\nexport const handlePasswordResetInit = mail => ({\r\n  type: ACTION_TYPES.RESET_PASSWORD_INIT,\r\n  // If the content-type isn't set that way, axios will try to encode the body and thus modify the data sent to the server.\r\n  payload: axios.post(`${apiUrl}/init`, mail, { headers: { ['Content-Type']: 'text/plain' } }),\r\n  meta: {\r\n    successMessage: 'Check your emails for details on how to reset your password.',\r\n    errorMessage: \"<strong>Email address isn't registered!</strong> Please check and try again\"\r\n  }\r\n});\r\n\r\nexport const handlePasswordResetFinish = (key, newPassword) => ({\r\n  type: ACTION_TYPES.RESET_PASSWORD_FINISH,\r\n  payload: axios.post(`${apiUrl}/finish`, { key, newPassword }),\r\n  meta: {\r\n    successMessage: '<strong>Your password has been reset.</strong> Please '\r\n  }\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import axios from 'axios';\r\n\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nexport const ACTION_TYPES = {\r\n  UPDATE_PASSWORD: 'account/UPDATE_PASSWORD',\r\n  RESET: 'account/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  updateSuccess: false,\r\n  updateFailure: false\r\n};\r\n\r\nexport type PasswordState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\nexport default (state: PasswordState = initialState, action): PasswordState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.UPDATE_PASSWORD):\r\n      return {\r\n        ...initialState,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.UPDATE_PASSWORD):\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        updateSuccess: false,\r\n        updateFailure: true\r\n      };\r\n    case SUCCESS(ACTION_TYPES.UPDATE_PASSWORD):\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        updateSuccess: true,\r\n        updateFailure: false\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Actions\r\nconst apiUrl = 'api/account';\r\n\r\nexport const savePassword = (currentPassword, newPassword) => ({\r\n  type: ACTION_TYPES.UPDATE_PASSWORD,\r\n  payload: axios.post(`${apiUrl}/change-password`, { currentPassword, newPassword }),\r\n  meta: {\r\n    successMessage: '<strong>Password changed!</strong>',\r\n    errorMessage: '<strong>An error has occurred!</strong> The password could not be changed.'\r\n  }\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import axios from 'axios';\r\n\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nexport const ACTION_TYPES = {\r\n  CREATE_ACCOUNT: 'register/CREATE_ACCOUNT',\r\n  RESET: 'register/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  registrationSuccess: false,\r\n  registrationFailure: false,\r\n  errorMessage: null\r\n};\r\n\r\nexport type RegisterState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\nexport default (state: RegisterState = initialState, action): RegisterState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.CREATE_ACCOUNT):\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.CREATE_ACCOUNT):\r\n      return {\r\n        ...initialState,\r\n        registrationFailure: true,\r\n        errorMessage: action.payload.response.data.errorKey\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_ACCOUNT):\r\n      return {\r\n        ...initialState,\r\n        registrationSuccess: true\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Actions\r\nexport const handleRegister = (login, email, password, langKey = 'en') => ({\r\n  type: ACTION_TYPES.CREATE_ACCOUNT,\r\n  payload: axios.post('api/register', { login, email, password, langKey }),\r\n  meta: {\r\n    successMessage: '<strong>Registration saved!</strong> Please check your email for confirmation.'\r\n  }\r\n});\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\r\nimport { Row, Col, Alert, Button } from 'reactstrap';\r\n\r\nimport PasswordStrengthBar from 'app/shared/layout/password/password-strength-bar';\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { handleRegister, reset } from './register.reducer';\r\n\r\nexport type IRegisterProps = DispatchProps;\r\n\r\nexport interface IRegisterState {\r\n  password: string;\r\n}\r\n\r\nexport class RegisterPage extends React.Component<IRegisterProps, IRegisterState> {\r\n  state: IRegisterState = {\r\n    password: ''\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.reset();\r\n  }\r\n\r\n  handleValidSubmit = (event, values) => {\r\n    this.props.handleRegister(values.username, values.email, values.firstPassword);\r\n    event.preventDefault();\r\n  };\r\n\r\n  updatePassword = event => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <h1 id=\"register-title\">Registration</h1>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\">\r\n            <AvForm id=\"register-form\" onValidSubmit={this.handleValidSubmit}>\r\n              <AvField\r\n                name=\"username\"\r\n                label=\"Username\"\r\n                placeholder=\"Your username\"\r\n                validate={{\r\n                  required: { value: true, errorMessage: 'Your username is required.' },\r\n                  pattern: { value: '^[_.@A-Za-z0-9-]*$', errorMessage: 'Your username can only contain letters and digits.' },\r\n                  minLength: { value: 1, errorMessage: 'Your username is required to be at least 1 character.' },\r\n                  maxLength: { value: 50, errorMessage: 'Your username cannot be longer than 50 characters.' }\r\n                }}\r\n              />\r\n              <AvField\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                placeholder=\"Your email\"\r\n                type=\"email\"\r\n                validate={{\r\n                  required: { value: true, errorMessage: 'Your email is required.' },\r\n                  minLength: { value: 5, errorMessage: 'Your email is required to be at least 5 characters.' },\r\n                  maxLength: { value: 254, errorMessage: 'Your email cannot be longer than 50 characters.' }\r\n                }}\r\n              />\r\n              <AvField\r\n                name=\"firstPassword\"\r\n                label=\"New password\"\r\n                placeholder=\"New password\"\r\n                type=\"password\"\r\n                onChange={this.updatePassword}\r\n                validate={{\r\n                  required: { value: true, errorMessage: 'Your password is required.' },\r\n                  minLength: { value: 4, errorMessage: 'Your password is required to be at least 4 characters.' },\r\n                  maxLength: { value: 50, errorMessage: 'Your password cannot be longer than 50 characters.' }\r\n                }}\r\n              />\r\n              <PasswordStrengthBar password={this.state.password} />\r\n              <AvField\r\n                name=\"secondPassword\"\r\n                label=\"New password confirmation\"\r\n                placeholder=\"Confirm the new password\"\r\n                type=\"password\"\r\n                validate={{\r\n                  required: { value: true, errorMessage: 'Your confirmation password is required.' },\r\n                  minLength: { value: 4, errorMessage: 'Your confirmation password is required to be at least 4 characters.' },\r\n                  maxLength: { value: 50, errorMessage: 'Your confirmation password cannot be longer than 50 characters.' },\r\n                  match: { value: 'firstPassword', errorMessage: 'The password and its confirmation do not match!' }\r\n                }}\r\n              />\r\n              <Button id=\"register-submit\" color=\"primary\" type=\"submit\">\r\n                Register\r\n              </Button>\r\n            </AvForm>\r\n            <p>&nbsp;</p>\r\n            <Alert color=\"warning\">\r\n              <span>If you want to</span>\r\n              <a className=\"alert-link\"> sign in</a>\r\n              <span>\r\n                , you can try the default accounts:\r\n                <br />- Administrator (login=\"admin\" and password=\"admin\")\r\n                <br />- User (login=\"user\" and password=\"user\").\r\n              </span>\r\n            </Alert>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = { handleRegister, reset };\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(RegisterPage);\r\n","import axios from 'axios';\r\n\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\nimport { getSession } from 'app/shared/reducers/authentication';\r\n\r\nexport const ACTION_TYPES = {\r\n  UPDATE_ACCOUNT: 'account/UPDATE_ACCOUNT',\r\n  RESET: 'account/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  updateSuccess: false,\r\n  updateFailure: false\r\n};\r\n\r\nexport type SettingsState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\nexport default (state: SettingsState = initialState, action): SettingsState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.UPDATE_ACCOUNT):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.UPDATE_ACCOUNT):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updateSuccess: false,\r\n        updateFailure: true\r\n      };\r\n    case SUCCESS(ACTION_TYPES.UPDATE_ACCOUNT):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updateSuccess: true,\r\n        updateFailure: false\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...initialState\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Actions\r\nconst apiUrl = 'api/account';\r\n\r\nexport const saveAccountSettings = account => async dispatch => {\r\n  await dispatch({\r\n    type: ACTION_TYPES.UPDATE_ACCOUNT,\r\n    payload: axios.post(apiUrl, account),\r\n    meta: {\r\n      successMessage: '<strong>Settings saved!</strong>'\r\n    }\r\n  });\r\n  dispatch(getSession());\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","import axios from 'axios';\r\n\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_LOGS: 'administration/FETCH_LOGS',\r\n  FETCH_LOGS_CHANGE_LEVEL: 'administration/FETCH_LOGS_CHANGE_LEVEL',\r\n  FETCH_HEALTH: 'administration/FETCH_HEALTH',\r\n  FETCH_METRICS: 'administration/FETCH_METRICS',\r\n  FETCH_THREAD_DUMP: 'administration/FETCH_THREAD_DUMP',\r\n  FETCH_CONFIGURATIONS: 'administration/FETCH_CONFIGURATIONS',\r\n  FETCH_ENV: 'administration/FETCH_ENV',\r\n  FETCH_AUDITS: 'administration/FETCH_AUDITS'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  logs: {\r\n    loggers: [] as any[]\r\n  },\r\n  health: {} as any,\r\n  metrics: {} as any,\r\n  threadDump: [],\r\n  configuration: {\r\n    configProps: {} as any,\r\n    env: {} as any\r\n  },\r\n  audits: [],\r\n  totalItems: 0\r\n};\r\n\r\nexport type AdministrationState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: AdministrationState = initialState, action): AdministrationState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_METRICS):\r\n    case REQUEST(ACTION_TYPES.FETCH_THREAD_DUMP):\r\n    case REQUEST(ACTION_TYPES.FETCH_LOGS):\r\n    case REQUEST(ACTION_TYPES.FETCH_CONFIGURATIONS):\r\n    case REQUEST(ACTION_TYPES.FETCH_ENV):\r\n    case REQUEST(ACTION_TYPES.FETCH_AUDITS):\r\n    case REQUEST(ACTION_TYPES.FETCH_HEALTH):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        loading: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_METRICS):\r\n    case FAILURE(ACTION_TYPES.FETCH_THREAD_DUMP):\r\n    case FAILURE(ACTION_TYPES.FETCH_LOGS):\r\n    case FAILURE(ACTION_TYPES.FETCH_CONFIGURATIONS):\r\n    case FAILURE(ACTION_TYPES.FETCH_ENV):\r\n    case FAILURE(ACTION_TYPES.FETCH_AUDITS):\r\n    case FAILURE(ACTION_TYPES.FETCH_HEALTH):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_METRICS):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        metrics: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_THREAD_DUMP):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        threadDump: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_LOGS):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        logs: {\r\n          loggers: action.payload.data\r\n        }\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_CONFIGURATIONS):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        configuration: {\r\n          ...state.configuration,\r\n          configProps: action.payload.data\r\n        }\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_ENV):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        configuration: {\r\n          ...state.configuration,\r\n          env: action.payload.data\r\n        }\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_AUDITS):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        audits: action.payload.data,\r\n        totalItems: action.payload.headers['x-total-count']\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_HEALTH):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        health: action.payload.data\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Actions\r\n\r\nexport const systemHealth = () => ({\r\n  type: ACTION_TYPES.FETCH_HEALTH,\r\n  payload: axios.get('management/health')\r\n});\r\n\r\nexport const systemMetrics = () => ({\r\n  type: ACTION_TYPES.FETCH_METRICS,\r\n  payload: axios.get('management/metrics')\r\n});\r\n\r\nexport const systemThreadDump = () => ({\r\n  type: ACTION_TYPES.FETCH_THREAD_DUMP,\r\n  payload: axios.get('management/threaddump')\r\n});\r\n\r\nexport const getLoggers = () => ({\r\n  type: ACTION_TYPES.FETCH_LOGS,\r\n  payload: axios.get('management/logs')\r\n});\r\n\r\nexport const changeLogLevel = (name, level) => {\r\n  const body = {\r\n    level,\r\n    name\r\n  };\r\n  return async dispatch => {\r\n    await dispatch({\r\n      type: ACTION_TYPES.FETCH_LOGS_CHANGE_LEVEL,\r\n      payload: axios.put('management/logs', body)\r\n    });\r\n    dispatch(getLoggers());\r\n  };\r\n};\r\n\r\nexport const getConfigurations = () => ({\r\n  type: ACTION_TYPES.FETCH_CONFIGURATIONS,\r\n  payload: axios.get('management/configprops')\r\n});\r\n\r\nexport const getEnv = () => ({\r\n  type: ACTION_TYPES.FETCH_ENV,\r\n  payload: axios.get('management/env')\r\n});\r\n\r\nexport const getAudits = (page, size, sort, fromDate, toDate) => {\r\n  let requestUrl = `management/audits${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  if (fromDate) {\r\n    requestUrl += `&fromDate=${fromDate}`;\r\n  }\r\n  if (toDate) {\r\n    requestUrl += `&toDate=${toDate}`;\r\n  }\r\n  return {\r\n    type: ACTION_TYPES.FETCH_AUDITS,\r\n    payload: axios.get(requestUrl)\r\n  };\r\n};\r\n","import axios from 'axios';\r\nimport { ICrudGetAction, ICrudGetAllAction, ICrudPutAction, ICrudDeleteAction } from 'react-jhipster';\r\n\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\nimport { IUser, defaultValue } from 'app/shared/model/user.model';\r\n\r\nexport const ACTION_TYPES = {\r\n  FETCH_ROLES: 'userManagement/FETCH_ROLES',\r\n  FETCH_USERS: 'userManagement/FETCH_USERS',\r\n  FETCH_USER: 'userManagement/FETCH_USER',\r\n  CREATE_USER: 'userManagement/CREATE_USER',\r\n  UPDATE_USER: 'userManagement/UPDATE_USER',\r\n  DELETE_USER: 'userManagement/DELETE_USER',\r\n  RESET: 'userManagement/RESET'\r\n};\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  errorMessage: null,\r\n  users: [] as ReadonlyArray<IUser>,\r\n  authorities: [] as any[],\r\n  user: defaultValue,\r\n  updating: false,\r\n  updateSuccess: false,\r\n  totalItems: 0\r\n};\r\n\r\nexport type UserManagementState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\nexport default (state: UserManagementState = initialState, action): UserManagementState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.FETCH_ROLES):\r\n      return {\r\n        ...state\r\n      };\r\n    case REQUEST(ACTION_TYPES.FETCH_USERS):\r\n    case REQUEST(ACTION_TYPES.FETCH_USER):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        loading: true\r\n      };\r\n    case REQUEST(ACTION_TYPES.CREATE_USER):\r\n    case REQUEST(ACTION_TYPES.UPDATE_USER):\r\n    case REQUEST(ACTION_TYPES.DELETE_USER):\r\n      return {\r\n        ...state,\r\n        errorMessage: null,\r\n        updateSuccess: false,\r\n        updating: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.FETCH_USERS):\r\n    case FAILURE(ACTION_TYPES.FETCH_USER):\r\n    case FAILURE(ACTION_TYPES.FETCH_ROLES):\r\n    case FAILURE(ACTION_TYPES.CREATE_USER):\r\n    case FAILURE(ACTION_TYPES.UPDATE_USER):\r\n    case FAILURE(ACTION_TYPES.DELETE_USER):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        updating: false,\r\n        updateSuccess: false,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_ROLES):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        authorities: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_USERS):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        users: action.payload.data,\r\n        totalItems: action.payload.headers['x-total-count']\r\n      };\r\n    case SUCCESS(ACTION_TYPES.FETCH_USER):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        user: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.CREATE_USER):\r\n    case SUCCESS(ACTION_TYPES.UPDATE_USER):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        user: action.payload.data\r\n      };\r\n    case SUCCESS(ACTION_TYPES.DELETE_USER):\r\n      return {\r\n        ...state,\r\n        updating: false,\r\n        updateSuccess: true,\r\n        user: {}\r\n      };\r\n    case ACTION_TYPES.RESET:\r\n      return {\r\n        ...state,\r\n        user: {}\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst apiUrl = 'api/users';\r\n// Actions\r\nexport const getUsers: ICrudGetAllAction<IUser> = (page, size, sort) => {\r\n  const requestUrl = `${apiUrl}${sort ? `?page=${page}&size=${size}&sort=${sort}` : ''}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_USERS,\r\n    payload: axios.get<IUser>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const getRoles = () => ({\r\n  type: ACTION_TYPES.FETCH_ROLES,\r\n  payload: axios.get(`${apiUrl}/authorities`)\r\n});\r\n\r\nexport const getUser: ICrudGetAction<IUser> = id => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  return {\r\n    type: ACTION_TYPES.FETCH_USER,\r\n    payload: axios.get<IUser>(requestUrl)\r\n  };\r\n};\r\n\r\nexport const createUser: ICrudPutAction<IUser> = user => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.CREATE_USER,\r\n    payload: axios.post(apiUrl, user)\r\n  });\r\n  dispatch(getUsers());\r\n  return result;\r\n};\r\n\r\nexport const updateUser: ICrudPutAction<IUser> = user => async dispatch => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.UPDATE_USER,\r\n    payload: axios.put(apiUrl, user)\r\n  });\r\n  dispatch(getUsers());\r\n  return result;\r\n};\r\n\r\nexport const deleteUser: ICrudDeleteAction<IUser> = id => async dispatch => {\r\n  const requestUrl = `${apiUrl}/${id}`;\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.DELETE_USER,\r\n    payload: axios.delete(requestUrl)\r\n  });\r\n  dispatch(getUsers());\r\n  return result;\r\n};\r\n\r\nexport const reset = () => ({\r\n  type: ACTION_TYPES.RESET\r\n});\r\n","\nvar content = require(\"!!../../../../../../node_modules/css-loader/index.js!./home.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../node_modules/css-loader/index.js!./home.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../node_modules/css-loader/index.js!./home.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './home.css';\r\n\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { Row, Col, Alert } from 'reactstrap';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { getSession } from 'app/shared/reducers/authentication';\r\n\r\nexport interface IHomeProp extends StateProps, DispatchProps {}\r\n\r\nexport class Home extends React.Component<IHomeProp> {\r\n  componentDidMount() {\r\n    this.props.getSession();\r\n  }\r\n\r\n  render() {\r\n    const { account } = this.props;\r\n    return (\r\n      <Row>\r\n        <Col md=\"9\">\r\n          <h2>Welcome, Java Hipster!</h2>\r\n          <p className=\"lead\">This is your homepage</p>\r\n          {account && account.login ? (\r\n            <div>\r\n              <Alert color=\"success\">You are logged in as user {account.login}.</Alert>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <Alert color=\"warning\">\r\n                If you want to\r\n                <Link to=\"/login\" className=\"alert-link\">\r\n                  {' '}\r\n                  sign in\r\n                </Link>\r\n                , you can try the default accounts:\r\n                <br />- Administrator (login=&quot;admin&quot; and password=&quot;admin&quot;)\r\n                <br />- User (login=&quot;user&quot; and password=&quot;user&quot;).\r\n              </Alert>\r\n\r\n              <Alert color=\"warning\">\r\n                You do not have an account yet?&nbsp;\r\n                <Link to=\"/register\" className=\"alert-link\">\r\n                  Register a new account\r\n                </Link>\r\n              </Alert>\r\n            </div>\r\n          )}\r\n          <p>If you have any question on JHipster:</p>\r\n\r\n          <ul>\r\n            <li>\r\n              <a href=\"https://www.jhipster.tech/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                JHipster homepage\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"http://stackoverflow.com/tags/jhipster/info\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                JHipster on Stack Overflow\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"https://github.com/jhipster/generator-jhipster/issues?state=open\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                JHipster bug tracker\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"https://gitter.im/jhipster/generator-jhipster\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                JHipster public chat room\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"https://twitter.com/java_hipster\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                follow @java_hipster on Twitter\r\n              </a>\r\n            </li>\r\n          </ul>\r\n\r\n          <p>\r\n            If you like JHipster, do not forget to give us a star on{' '}\r\n            <a href=\"https://github.com/jhipster/generator-jhipster\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n              Github\r\n            </a>!\r\n          </p>\r\n        </Col>\r\n        <Col md=\"3\" className=\"pad\">\r\n          <span className=\"hipster rounded\" />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = storeState => ({\r\n  account: storeState.authentication.account,\r\n  isAuthenticated: storeState.authentication.isAuthenticated\r\n});\r\n\r\nconst mapDispatchToProps = { getSession };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Home);\r\n","import React from 'react';\r\n\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Label, Alert, Row, Col } from 'reactstrap';\r\nimport { AvForm, AvField, AvGroup, AvInput } from 'availity-reactstrap-validation';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport interface ILoginModalProps {\r\n  showModal: boolean;\r\n  loginError: boolean;\r\n  handleLogin: Function;\r\n  handleClose: Function;\r\n}\r\n\r\nclass LoginModal extends React.Component<ILoginModalProps> {\r\n  handleSubmit = (event, errors, { username, password, rememberMe }) => {\r\n    const { handleLogin } = this.props;\r\n    handleLogin(username, password, rememberMe);\r\n  };\r\n\r\n  render() {\r\n    const { loginError, handleClose } = this.props;\r\n\r\n    return (\r\n      <Modal isOpen={this.props.showModal} toggle={handleClose} backdrop=\"static\" id=\"login-page\" autoFocus={false}>\r\n        <AvForm onSubmit={this.handleSubmit}>\r\n          <ModalHeader id=\"login-title\" toggle={handleClose}>\r\n            Sign in\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <Row>\r\n              <Col md=\"12\">\r\n                {loginError ? (\r\n                  <Alert color=\"danger\">\r\n                    <strong>Failed to sign in!</strong> Please check your credentials and try again.\r\n                  </Alert>\r\n                ) : null}\r\n              </Col>\r\n              <Col md=\"12\">\r\n                <AvField\r\n                  name=\"username\"\r\n                  label=\"Username\"\r\n                  placeholder=\"Your username\"\r\n                  required\r\n                  errorMessage=\"Username cannot be empty!\"\r\n                  autoFocus\r\n                />\r\n                <AvField\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  label=\"Password\"\r\n                  placeholder=\"Your password\"\r\n                  required\r\n                  errorMessage=\"Password cannot be empty!\"\r\n                />\r\n                <AvGroup check inline>\r\n                  <Label className=\"form-check-label\">\r\n                    <AvInput type=\"checkbox\" name=\"rememberMe\" /> Remember me\r\n                  </Label>\r\n                </AvGroup>\r\n              </Col>\r\n            </Row>\r\n            <div className=\"mt-1\">&nbsp;</div>\r\n            <Alert color=\"warning\">\r\n              <Link to=\"/reset/request\">Did you forget your password?</Link>\r\n            </Alert>\r\n            <Alert color=\"warning\">\r\n              <span>You don't have an account yet?</span> <Link to=\"/register\">Register a new account</Link>\r\n            </Alert>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" onClick={handleClose} tabIndex=\"1\">\r\n              Cancel\r\n            </Button>{' '}\r\n            <Button color=\"primary\" type=\"submit\">\r\n              Sign in\r\n            </Button>\r\n          </ModalFooter>\r\n        </AvForm>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginModal;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, RouteComponentProps } from 'react-router-dom';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { login } from 'app/shared/reducers/authentication';\r\nimport LoginModal from './login-modal';\r\n\r\nexport interface ILoginProps extends StateProps, DispatchProps, RouteComponentProps<{}> {}\r\n\r\nexport interface ILoginState {\r\n  showModal: boolean;\r\n}\r\n\r\nexport class Login extends React.Component<ILoginProps, ILoginState> {\r\n  state: ILoginState = {\r\n    showModal: this.props.showModal\r\n  };\r\n\r\n  componentDidUpdate(prevProps: ILoginProps, prevState) {\r\n    if (this.props !== prevProps) {\r\n      this.setState({ showModal: this.props.showModal });\r\n    }\r\n  }\r\n\r\n  handleLogin = (username, password, rememberMe = false) => {\r\n    this.props.login(username, password, rememberMe);\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ showModal: false });\r\n  };\r\n\r\n  render() {\r\n    const { location, isAuthenticated } = this.props;\r\n    const { from } = location.state || { from: { pathname: '/', search: location.search } };\r\n    const { showModal } = this.state;\r\n    if (isAuthenticated) {\r\n      return <Redirect to={from} />;\r\n    }\r\n    return (\r\n      <LoginModal showModal={showModal} handleLogin={this.handleLogin} handleClose={this.handleClose} loginError={this.props.loginError} />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ authentication }: IRootState) => ({\r\n  isAuthenticated: authentication.isAuthenticated,\r\n  loginError: authentication.loginError,\r\n  showModal: authentication.showModalLogin\r\n});\r\n\r\nconst mapDispatchToProps = { login };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Login);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport { logout } from 'app/shared/reducers/authentication';\r\n\r\nexport interface ILogoutProps extends StateProps, DispatchProps {}\r\n\r\nexport class Logout extends React.Component<ILogoutProps> {\r\n  componentDidMount() {\r\n    this.props.logout();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"p-5\">\r\n        <h4>Logged out successfully!</h4>\r\n        <Redirect\r\n          to={{\r\n            pathname: '/'\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (storeState: IRootState) => ({});\r\n\r\nconst mapDispatchToProps = { logout };\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = typeof mapDispatchToProps;\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Logout);\r\n","import React from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport Loadable from 'react-loadable';\r\n\r\nimport Login from 'app/modules/login/login';\r\nimport Register from 'app/modules/account/register/register';\r\nimport Activate from 'app/modules/account/activate/activate';\r\nimport PasswordResetInit from 'app/modules/account/password-reset/init/password-reset-init';\r\nimport PasswordResetFinish from 'app/modules/account/password-reset/finish/password-reset-finish';\r\nimport Logout from 'app/modules/login/logout';\r\nimport Home from 'app/modules/home/home';\r\nimport Entities from 'app/entities';\r\nimport PrivateRoute from 'app/shared/auth/private-route';\r\nimport ErrorBoundaryRoute from 'app/shared/error/error-boundary-route';\r\nimport { AUTHORITIES } from 'app/config/constants';\r\n\r\n// tslint:disable:space-in-parens\r\nconst Account = Loadable({\r\n  loader: () => import(/* webpackChunkName: \"account\" */ 'app/modules/account'),\r\n  loading: () => <div>loading ...</div>\r\n});\r\n\r\nconst Admin = Loadable({\r\n  loader: () => import(/* webpackChunkName: \"administration\" */ 'app/modules/administration'),\r\n  loading: () => <div>loading ...</div>\r\n});\r\n// tslint:enable\r\n\r\nconst Routes = () => (\r\n  <div className=\"view-routes\">\r\n    <ErrorBoundaryRoute path=\"/login\" component={Login} />\r\n    <Switch>\r\n      <ErrorBoundaryRoute path=\"/logout\" component={Logout} />\r\n      <ErrorBoundaryRoute path=\"/register\" component={Register} />\r\n      <ErrorBoundaryRoute path=\"/activate/:key?\" component={Activate} />\r\n      <ErrorBoundaryRoute path=\"/reset/request\" component={PasswordResetInit} />\r\n      <ErrorBoundaryRoute path=\"/reset/finish/:key?\" component={PasswordResetFinish} />\r\n      <PrivateRoute path=\"/admin\" component={Admin} hasAnyAuthorities={[AUTHORITIES.ADMIN]} />\r\n      <PrivateRoute path=\"/account\" component={Account} hasAnyAuthorities={[AUTHORITIES.ADMIN, AUTHORITIES.USER]} />\r\n      <PrivateRoute path=\"/entity\" component={Entities} hasAnyAuthorities={[AUTHORITIES.USER]} />\r\n      <ErrorBoundaryRoute path=\"/\" component={Home} />\r\n    </Switch>\r\n  </div>\r\n);\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\r\n\r\nimport { IRootState } from 'app/shared/reducers';\r\nimport ErrorBoundary from 'app/shared/error/error-boundary';\r\n\r\ninterface IOwnProps extends RouteProps {\r\n  hasAnyAuthorities?: string[];\r\n}\r\n\r\nexport interface IPrivateRouteProps extends IOwnProps, StateProps {}\r\n\r\nexport const PrivateRouteComponent = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  isAuthorized,\r\n  hasAnyAuthorities = [],\r\n  ...rest\r\n}: IPrivateRouteProps) => {\r\n  const checkAuthorities = props =>\r\n    isAuthorized ? (\r\n      <ErrorBoundary>\r\n        <Component {...props} />\r\n      </ErrorBoundary>\r\n    ) : (\r\n      <div className=\"insufficient-authority\">\r\n        <div className=\"alert alert-danger\">You are not authorized to access this page.</div>\r\n      </div>\r\n    );\r\n\r\n  const renderRedirect = props =>\r\n    isAuthenticated ? (\r\n      checkAuthorities(props)\r\n    ) : (\r\n      <Redirect\r\n        to={{\r\n          pathname: '/login',\r\n          search: props.location.search,\r\n          state: { from: props.location }\r\n        }}\r\n      />\r\n    );\r\n\r\n  if (!Component) throw new Error(`A component needs to be specified for private route for path ${(rest as any).path}`);\r\n\r\n  return <Route {...rest} render={renderRedirect} />;\r\n};\r\n\r\nexport const hasAnyAuthority = (authorities: string[], hasAnyAuthorities: string[]) => {\r\n  if (authorities && authorities.length !== 0) {\r\n    if (hasAnyAuthorities.length === 0) {\r\n      return true;\r\n    }\r\n    return hasAnyAuthorities.some(auth => authorities.includes(auth));\r\n  }\r\n  return false;\r\n};\r\n\r\nconst mapStateToProps = ({ authentication: { isAuthenticated, account } }: IRootState, { hasAnyAuthorities = [] }: IOwnProps) => ({\r\n  isAuthenticated,\r\n  isAuthorized: hasAnyAuthority(account.authorities, hasAnyAuthorities)\r\n});\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\n\r\n/**\r\n * A route wrapped in an authentication check so that routing happens only when you are authenticated.\r\n * Accepts same props as React router Route.\r\n * The route also checks for authorization if hasAnyAuthorities is specified.\r\n */\r\nexport const PrivateRoute = connect<StateProps, undefined, IOwnProps>(\r\n  mapStateToProps,\r\n  null,\r\n  null,\r\n  { pure: false }\r\n)(PrivateRouteComponent);\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\r\nimport { Route, RouteProps } from 'react-router-dom';\r\nimport ErrorBoundary from 'app/shared/error/error-boundary';\r\n\r\nexport const ErrorBoundaryRoute = ({ component: Component, ...rest }: RouteProps) => {\r\n  const encloseInErrorBoundary = props => (\r\n    <ErrorBoundary>\r\n      <Component {...props} />\r\n    </ErrorBoundary>\r\n  );\r\n\r\n  if (!Component) throw new Error(`A component needs to be specified for path ${(rest as any).path}`);\r\n\r\n  return <Route {...rest} render={encloseInErrorBoundary} />;\r\n};\r\n\r\nexport default ErrorBoundaryRoute;\r\n","import React from 'react';\r\n\r\ninterface IErrorBoundaryProps {\r\n  readonly children: JSX.Element | JSX.Element[];\r\n}\r\n\r\ninterface IErrorBoundaryState {\r\n  readonly error: any;\r\n  readonly errorInfo: any;\r\n}\r\n\r\nclass ErrorBoundary extends React.Component<IErrorBoundaryProps, IErrorBoundaryState> {\r\n  readonly state: IErrorBoundaryState = { error: undefined, errorInfo: undefined };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState({\r\n      error,\r\n      errorInfo\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { error, errorInfo } = this.state;\r\n    if (errorInfo) {\r\n      const errorDetails =\r\n        process.env.NODE_ENV === 'development' ? (\r\n          <details className=\"preserve-space\">\r\n            {error && error.toString()}\r\n            <br />\r\n            {errorInfo.componentStack}\r\n          </details>\r\n        ) : (\r\n          undefined\r\n        );\r\n      return (\r\n        <div>\r\n          <h2 className=\"error\">An unexpected error has occurred.</h2>\r\n          {errorDetails}\r\n        </div>\r\n      );\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","\nvar content = require(\"!!../../../../../../../node_modules/css-loader/index.js!./footer.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/index.js!./footer.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/index.js!./footer.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './footer.css';\r\n\r\nimport React from 'react';\r\n\r\nimport { Col, Row } from 'reactstrap';\r\n\r\nconst Footer = props => (\r\n  <div className=\"footer page-content\">\r\n    <Row>\r\n      <Col md=\"12\">\r\n        <p>Your footer</p>\r\n      </Col>\r\n    </Row>\r\n  </div>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nimport { UncontrolledDropdown, DropdownToggle, DropdownMenu, NavItem, NavLink, NavbarBrand } from 'reactstrap';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport appConfig from 'app/config/constants';\r\n\r\nexport const NavDropdown = props => (\r\n  <UncontrolledDropdown nav inNavbar id={props.id}>\r\n    <DropdownToggle nav caret className=\"d-flex align-items-center\">\r\n      <FontAwesomeIcon icon={props.icon} />\r\n      <span>{props.name}</span>\r\n    </DropdownToggle>\r\n    <DropdownMenu right style={props.style}>\r\n      {props.children}\r\n    </DropdownMenu>\r\n  </UncontrolledDropdown>\r\n);\r\n\r\nexport const BrandIcon = props => (\r\n  <div {...props} className=\"brand-icon\">\r\n    <img src=\"content/images/logo-jhipster-react.svg\" alt=\"Logo\" />\r\n  </div>\r\n);\r\n\r\nexport const Brand = props => (\r\n  <NavbarBrand tag={Link} to=\"/\" className=\"brand-logo\">\r\n    <BrandIcon />\r\n    <span className=\"brand-title\">Jhipster5</span>\r\n    <span className=\"navbar-version\">{appConfig.VERSION}</span>\r\n  </NavbarBrand>\r\n);\r\n\r\nexport const Home = props => (\r\n  <NavItem>\r\n    <NavLink tag={Link} to=\"/\" className=\"d-flex align-items-center\">\r\n      <FontAwesomeIcon icon=\"home\" />\r\n      <span>Home</span>\r\n    </NavLink>\r\n  </NavItem>\r\n);\r\n","\nvar content = require(\"!!../../../../../../../node_modules/css-loader/index.js!./header.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/index.js!./header.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/index.js!./header.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './header.css';\r\n\r\nimport React from 'react';\r\n\r\nimport { Navbar, Nav, NavbarToggler, NavbarBrand, Collapse } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport LoadingBar from 'react-redux-loading-bar';\r\n\r\nimport { Home, Brand } from './header-components';\r\nimport { AdminMenu, EntitiesMenu, AccountMenu } from './menus';\r\n\r\nexport interface IHeaderProps {\r\n  isAuthenticated: boolean;\r\n  isAdmin: boolean;\r\n  ribbonEnv: string;\r\n  isInProduction: boolean;\r\n  isSwaggerEnabled: boolean;\r\n}\r\n\r\nexport interface IHeaderState {\r\n  menuOpen: boolean;\r\n}\r\n\r\nexport default class Header extends React.Component<IHeaderProps, IHeaderState> {\r\n  state: IHeaderState = {\r\n    menuOpen: false\r\n  };\r\n\r\n  renderDevRibbon = () =>\r\n    this.props.isInProduction === false ? (\r\n      <div className=\"ribbon dev\">\r\n        <a href=\"\">Development</a>\r\n      </div>\r\n    ) : null;\r\n\r\n  toggleMenu = () => {\r\n    this.setState({ menuOpen: !this.state.menuOpen });\r\n  };\r\n\r\n  render() {\r\n    const { isAuthenticated, isAdmin, isSwaggerEnabled, isInProduction } = this.props;\r\n\r\n    /* jhipster-needle-add-element-to-menu - JHipster will add new menu items here */\r\n\r\n    return (\r\n      <div id=\"app-header\">\r\n        {this.renderDevRibbon()}\r\n        <LoadingBar className=\"loading-bar\" />\r\n        <Navbar dark expand=\"sm\" fixed=\"top\" className=\"jh-navbar\">\r\n          <NavbarToggler aria-label=\"Menu\" onClick={this.toggleMenu} />\r\n          <Brand />\r\n          <Collapse isOpen={this.state.menuOpen} navbar>\r\n            <Nav id=\"header-tabs\" className=\"ml-auto\" navbar>\r\n              <Home />\r\n              {isAuthenticated && <EntitiesMenu />}\r\n              {isAuthenticated && isAdmin && <AdminMenu showSwagger={isSwaggerEnabled} showDatabase={!isInProduction} />}\r\n              <AccountMenu isAuthenticated={isAuthenticated} />\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { DropdownItem } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { NavLink as Link } from 'react-router-dom';\r\n\r\nimport { NavDropdown } from '../header-components';\r\n\r\nconst accountMenuItemsAuthenticated = (\r\n  <>\r\n    <DropdownItem tag={Link} to=\"/account/settings\">\r\n      <FontAwesomeIcon icon=\"wrench\" /> Settings\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/account/password\">\r\n      <FontAwesomeIcon icon=\"clock\" /> Password\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/logout\">\r\n      <FontAwesomeIcon icon=\"sign-out-alt\" /> Sign out\r\n    </DropdownItem>\r\n  </>\r\n);\r\n\r\nconst accountMenuItems = (\r\n  <>\r\n    <DropdownItem id=\"login-item\" tag={Link} to=\"/login\">\r\n      <FontAwesomeIcon icon=\"sign-in-alt\" /> Sign in\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/register\">\r\n      <FontAwesomeIcon icon=\"sign-in-alt\" /> Register\r\n    </DropdownItem>\r\n  </>\r\n);\r\n\r\nexport const AccountMenu = ({ isAuthenticated = false }) => (\r\n  <NavDropdown icon=\"user\" name=\"Account\" id=\"account-menu\">\r\n    {isAuthenticated ? accountMenuItemsAuthenticated : accountMenuItems}\r\n  </NavDropdown>\r\n);\r\n\r\nexport default AccountMenu;\r\n","import React from 'react';\r\nimport { DropdownItem } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport { NavDropdown } from '../header-components';\r\n\r\nconst adminMenuItems = (\r\n  <>\r\n    <DropdownItem tag={Link} to=\"/admin/user-management\">\r\n      <FontAwesomeIcon icon=\"user\" /> User management\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/admin/metrics\">\r\n      <FontAwesomeIcon icon=\"tachometer-alt\" /> Metrics\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/admin/health\">\r\n      <FontAwesomeIcon icon=\"heart\" /> Health\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/admin/configuration\">\r\n      <FontAwesomeIcon icon=\"list\" /> Configuration\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/admin/audits\">\r\n      <FontAwesomeIcon icon=\"bell\" /> Audits\r\n    </DropdownItem>\r\n    {/* jhipster-needle-add-element-to-admin-menu - JHipster will add entities to the admin menu here */}\r\n    <DropdownItem tag={Link} to=\"/admin/logs\">\r\n      <FontAwesomeIcon icon=\"tasks\" /> Logs\r\n    </DropdownItem>\r\n  </>\r\n);\r\n\r\nconst swaggerItem = (\r\n  <DropdownItem tag={Link} to=\"/admin/docs\">\r\n    <FontAwesomeIcon icon=\"book\" /> API\r\n  </DropdownItem>\r\n);\r\n\r\nconst databaseItem = (\r\n  <DropdownItem tag=\"a\" href=\"./h2-console\" target=\"_tab\">\r\n    <FontAwesomeIcon icon=\"hdd\" /> Database\r\n  </DropdownItem>\r\n);\r\n\r\nexport const AdminMenu = ({ showSwagger, showDatabase }) => (\r\n  <NavDropdown icon=\"user-plus\" name=\"Administration\" style={{ width: '140%' }} id=\"admin-menu\">\r\n    {adminMenuItems}\r\n    {showSwagger && swaggerItem}\r\n\r\n    {showDatabase && databaseItem}\r\n  </NavDropdown>\r\n);\r\n\r\nexport default AdminMenu;\r\n","import React from 'react';\r\nimport { DropdownItem } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { NavLink as Link } from 'react-router-dom';\r\nimport { NavDropdown } from '../header-components';\r\n\r\nexport const EntitiesMenu = props => (\r\n  // tslint:disable-next-line:jsx-self-close\r\n  <NavDropdown icon=\"th-list\" name=\"Entities\" id=\"entity-menu\">\r\n    <DropdownItem tag={Link} to=\"/entity/ps-entity-template\">\r\n      <FontAwesomeIcon icon=\"asterisk\" />&nbsp;Ps Entity Template\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/ps-custom-fields-template\">\r\n      <FontAwesomeIcon icon=\"asterisk\" />&nbsp;Ps Custom Fields Template\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/ps-entity\">\r\n      <FontAwesomeIcon icon=\"asterisk\" />&nbsp;Ps Entity\r\n    </DropdownItem>\r\n    <DropdownItem tag={Link} to=\"/entity/ps-custom-fields-values\">\r\n      <FontAwesomeIcon icon=\"asterisk\" />&nbsp;Ps Custom Fields Values\r\n    </DropdownItem>\r\n    {/* jhipster-needle-add-entity-to-menu - JHipster will add entities to the menu here */}\r\n  </NavDropdown>\r\n);\r\n","export * from './account';\r\nexport * from './admin';\r\nexport * from './entities';\r\n","\nvar content = require(\"!!../../../../../../../node_modules/css-loader/index.js!./password-strength-bar.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../../../node_modules/css-loader/index.js!./password-strength-bar.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../../../node_modules/css-loader/index.js!./password-strength-bar.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import './password-strength-bar.css';\r\n\r\nimport React from 'react';\r\n\r\nexport interface IPasswordStrengthBarProps {\r\n  password: string;\r\n}\r\n\r\nexport const PasswordStrengthBar = ({ password }: IPasswordStrengthBarProps) => {\r\n  const colors = ['#F00', '#F90', '#FF0', '#9F0', '#0F0'];\r\n\r\n  const measureStrength = (p: string): number => {\r\n    let force = 0;\r\n    const regex = /[$-/:-?{-~!\"^_`\\[\\]]/g;\r\n    const flags = {\r\n      lowerLetters: /[a-z]+/.test(p),\r\n      upperLetters: /[A-Z]+/.test(p),\r\n      numbers: /[0-9]+/.test(p),\r\n      symbols: regex.test(p)\r\n    };\r\n\r\n    const passedMatches = Object.values(flags).filter((isMatchedFlag: boolean) => !!isMatchedFlag).length;\r\n\r\n    force += 2 * p.length + (p.length >= 10 ? 1 : 0);\r\n    force += passedMatches * 10;\r\n\r\n    // penality (short password)\r\n    force = p.length <= 6 ? Math.min(force, 10) : force;\r\n\r\n    // penality (poor variety of characters)\r\n    force = passedMatches === 1 ? Math.min(force, 10) : force;\r\n    force = passedMatches === 2 ? Math.min(force, 20) : force;\r\n    force = passedMatches === 3 ? Math.min(force, 40) : force;\r\n\r\n    return force;\r\n  };\r\n\r\n  const getColor = (s: number): any => {\r\n    let idx = 0;\r\n    if (s <= 10) {\r\n      idx = 0;\r\n    } else if (s <= 20) {\r\n      idx = 1;\r\n    } else if (s <= 30) {\r\n      idx = 2;\r\n    } else if (s <= 40) {\r\n      idx = 3;\r\n    } else {\r\n      idx = 4;\r\n    }\r\n    return { idx: idx + 1, col: colors[idx] };\r\n  };\r\n\r\n  const getPoints = force => {\r\n    const pts = [];\r\n    for (let i = 0; i < 5; i++) {\r\n      pts.push(<li key={i} className=\"point\" style={i < force.idx ? { backgroundColor: force.col } : { backgroundColor: '#DDD' }} />);\r\n    }\r\n    return pts;\r\n  };\r\n\r\n  const strength = getColor(measureStrength(password));\r\n  const points = getPoints(strength);\r\n\r\n  return (\r\n    <div id=\"strength\">\r\n      <small>Password strength:</small>\r\n      <ul id=\"strengthBar\">{points}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordStrengthBar;\r\n","import { IPSCustomFieldsValues } from 'app/shared/model//ps-custom-fields-values.model';\r\nimport { IPSEntityTemplate } from 'app/shared/model//ps-entity-template.model';\r\n\r\nexport interface IPSCustomFieldsTemplate {\r\n  id?: number;\r\n  name?: string;\r\n  type?: string;\r\n  pSCustomFieldsValues?: IPSCustomFieldsValues[];\r\n  psentitytemplateid?: IPSEntityTemplate;\r\n}\r\n\r\nexport const defaultValue: Readonly<IPSCustomFieldsTemplate> = {};\r\n","import { IPSEntity } from 'app/shared/model//ps-entity.model';\r\nimport { IPSCustomFieldsTemplate } from 'app/shared/model//ps-custom-fields-template.model';\r\n\r\nexport interface IPSCustomFieldsValues {\r\n  id?: number;\r\n  value?: string;\r\n  psentity?: IPSEntity;\r\n  pscustomfieldstemplate?: IPSCustomFieldsTemplate;\r\n}\r\n\r\nexport const defaultValue: Readonly<IPSCustomFieldsValues> = {};\r\n","import { IPSEntityTemplate } from 'app/shared/model//ps-entity-template.model';\r\nimport { IPSCustomFieldsTemplate } from 'app/shared/model//ps-custom-fields-template.model';\r\nimport { IPSEntity } from 'app/shared/model//ps-entity.model';\r\n\r\nexport interface IPSEntityTemplate {\r\n  id?: number;\r\n  name?: string;\r\n  pSEntityTemplates?: IPSEntityTemplate[];\r\n  pSCustomFieldsTemplates?: IPSCustomFieldsTemplate[];\r\n  pSEntities?: IPSEntity[];\r\n  parentid?: IPSEntityTemplate;\r\n}\r\n\r\nexport const defaultValue: Readonly<IPSEntityTemplate> = {};\r\n","import { IPSCustomFieldsValues } from 'app/shared/model//ps-custom-fields-values.model';\r\nimport { IPSEntityTemplate } from 'app/shared/model//ps-entity-template.model';\r\n\r\nexport interface IPSEntity {\r\n  id?: number;\r\n  name?: string;\r\n  pSCustomFieldsValues?: IPSCustomFieldsValues[];\r\n  psentitytemplateid?: IPSEntityTemplate;\r\n}\r\n\r\nexport const defaultValue: Readonly<IPSEntity> = {};\r\n","export interface IUser {\r\n  id?: any;\r\n  login?: string;\r\n  firstName?: string;\r\n  lastName?: string;\r\n  email?: string;\r\n  activated?: boolean;\r\n  langKey?: string;\r\n  authorities?: any[];\r\n  createdBy?: string;\r\n  createdDate?: Date;\r\n  lastModifiedBy?: string;\r\n  lastModifiedDate?: Date;\r\n  password?: string;\r\n}\r\n\r\nexport const defaultValue: Readonly<IUser> = {\r\n  id: null,\r\n  login: null,\r\n  firstName: null,\r\n  lastName: null,\r\n  email: null,\r\n  activated: false,\r\n  langKey: null,\r\n  authorities: null,\r\n  createdBy: null,\r\n  createdDate: null,\r\n  lastModifiedBy: null,\r\n  lastModifiedDate: null,\r\n  password: null\r\n};\r\n","/**\r\n * Appends REQUEST asyc action type\r\n */\r\n\r\nexport const REQUEST = actionType => `${actionType}_PENDING`;\r\n\r\n/**\r\n * Appends SUCCESS asyc action type\r\n */\r\n\r\nexport const SUCCESS = actionType => `${actionType}_FULFILLED`;\r\n\r\n/**\r\n * Appends FAILURE asyc action type\r\n */\r\n\r\nexport const FAILURE = actionType => `${actionType}_REJECTED`;\r\n","import axios from 'axios';\r\n\r\nimport { SUCCESS } from 'app/shared/reducers/action-type.util';\r\n\r\nexport const ACTION_TYPES = {\r\n  GET_PROFILE: 'applicationProfile/GET_PROFILE'\r\n};\r\n\r\nconst initialState = {\r\n  ribbonEnv: '',\r\n  inProduction: true,\r\n  isSwaggerEnabled: false\r\n};\r\n\r\nexport type ApplicationProfileState = Readonly<typeof initialState>;\r\n\r\nexport default (state: ApplicationProfileState = initialState, action): ApplicationProfileState => {\r\n  switch (action.type) {\r\n    case SUCCESS(ACTION_TYPES.GET_PROFILE):\r\n      const { data } = action.payload;\r\n      return {\r\n        ...state,\r\n        ribbonEnv: data['display-ribbon-on-profiles'],\r\n        inProduction: data.activeProfiles.includes('prod'),\r\n        isSwaggerEnabled: data.activeProfiles.includes('swagger')\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getProfile = () => ({\r\n  type: ACTION_TYPES.GET_PROFILE,\r\n  payload: axios.get('management/info')\r\n});\r\n","import axios from 'axios';\r\nimport { Storage } from 'react-jhipster';\r\n\r\nimport { REQUEST, SUCCESS, FAILURE } from 'app/shared/reducers/action-type.util';\r\n\r\nexport const ACTION_TYPES = {\r\n  LOGIN: 'authentication/LOGIN',\r\n  GET_SESSION: 'authentication/GET_SESSION',\r\n  LOGOUT: 'authentication/LOGOUT',\r\n  CLEAR_AUTH: 'authentication/CLEAR_AUTH',\r\n  ERROR_MESSAGE: 'authentication/ERROR_MESSAGE'\r\n};\r\n\r\nconst AUTH_TOKEN_KEY = 'jhi-authenticationToken';\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  isAuthenticated: false,\r\n  loginSuccess: false,\r\n  loginError: false, // Errors returned from server side\r\n  showModalLogin: false,\r\n  account: {} as any,\r\n  errorMessage: null as string, // Errors returned from server side\r\n  redirectMessage: null as string\r\n};\r\n\r\nexport type AuthenticationState = Readonly<typeof initialState>;\r\n\r\n// Reducer\r\n\r\nexport default (state: AuthenticationState = initialState, action): AuthenticationState => {\r\n  switch (action.type) {\r\n    case REQUEST(ACTION_TYPES.LOGIN):\r\n    case REQUEST(ACTION_TYPES.GET_SESSION):\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.LOGIN):\r\n      return {\r\n        ...initialState,\r\n        errorMessage: action.payload,\r\n        showModalLogin: true,\r\n        loginError: true\r\n      };\r\n    case FAILURE(ACTION_TYPES.GET_SESSION):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated: false,\r\n        showModalLogin: true,\r\n        errorMessage: action.payload\r\n      };\r\n    case SUCCESS(ACTION_TYPES.LOGIN):\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        loginError: false,\r\n        showModalLogin: false,\r\n        loginSuccess: true\r\n      };\r\n    case ACTION_TYPES.LOGOUT:\r\n      return {\r\n        ...initialState,\r\n        showModalLogin: true\r\n      };\r\n    case SUCCESS(ACTION_TYPES.GET_SESSION): {\r\n      const isAuthenticated = action.payload && action.payload.data && action.payload.data.activated;\r\n      return {\r\n        ...state,\r\n        isAuthenticated,\r\n        loading: false,\r\n        account: action.payload.data\r\n      };\r\n    }\r\n    case ACTION_TYPES.ERROR_MESSAGE:\r\n      return {\r\n        ...initialState,\r\n        showModalLogin: true,\r\n        redirectMessage: action.message\r\n      };\r\n    case ACTION_TYPES.CLEAR_AUTH:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        showModalLogin: true,\r\n        isAuthenticated: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const displayAuthError = message => ({ type: ACTION_TYPES.ERROR_MESSAGE, message });\r\n\r\nexport const getSession = () => dispatch =>\r\n  dispatch({\r\n    type: ACTION_TYPES.GET_SESSION,\r\n    payload: axios.get('api/account')\r\n  });\r\n\r\nexport const login = (username, password, rememberMe = false) => async (dispatch, getState) => {\r\n  const result = await dispatch({\r\n    type: ACTION_TYPES.LOGIN,\r\n    payload: axios.post('api/authenticate', { username, password, rememberMe })\r\n  });\r\n  const bearerToken = result.value.headers.authorization;\r\n  if (bearerToken && bearerToken.slice(0, 7) === 'Bearer ') {\r\n    const jwt = bearerToken.slice(7, bearerToken.length);\r\n    if (rememberMe) {\r\n      Storage.local.set(AUTH_TOKEN_KEY, jwt);\r\n    } else {\r\n      Storage.session.set(AUTH_TOKEN_KEY, jwt);\r\n    }\r\n  }\r\n  dispatch(getSession());\r\n};\r\n\r\nexport const clearAuthToken = () => {\r\n  if (Storage.local.get(AUTH_TOKEN_KEY)) {\r\n    Storage.local.remove(AUTH_TOKEN_KEY);\r\n  }\r\n  if (Storage.session.get(AUTH_TOKEN_KEY)) {\r\n    Storage.session.remove(AUTH_TOKEN_KEY);\r\n  }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n  clearAuthToken();\r\n  dispatch({\r\n    type: ACTION_TYPES.LOGOUT\r\n  });\r\n};\r\n\r\nexport const clearAuthentication = messageKey => (dispatch, getState) => {\r\n  clearAuthToken();\r\n  dispatch(displayAuthError(messageKey));\r\n  dispatch({\r\n    type: ACTION_TYPES.CLEAR_AUTH\r\n  });\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { loadingBarReducer as loadingBar } from 'react-redux-loading-bar';\r\n\r\nimport authentication, { AuthenticationState } from './authentication';\r\nimport applicationProfile, { ApplicationProfileState } from './application-profile';\r\n\r\nimport administration, { AdministrationState } from 'app/modules/administration/administration.reducer';\r\nimport userManagement, { UserManagementState } from 'app/modules/administration/user-management/user-management.reducer';\r\nimport register, { RegisterState } from 'app/modules/account/register/register.reducer';\r\nimport activate, { ActivateState } from 'app/modules/account/activate/activate.reducer';\r\nimport password, { PasswordState } from 'app/modules/account/password/password.reducer';\r\nimport settings, { SettingsState } from 'app/modules/account/settings/settings.reducer';\r\nimport passwordReset, { PasswordResetState } from 'app/modules/account/password-reset/password-reset.reducer';\r\n// prettier-ignore\r\nimport pSEntityTemplate, {\r\n  PSEntityTemplateState\r\n} from 'app/entities/ps-entity-template/ps-entity-template.reducer';\r\n// prettier-ignore\r\nimport pSCustomFieldsTemplate, {\r\n  PSCustomFieldsTemplateState\r\n} from 'app/entities/ps-custom-fields-template/ps-custom-fields-template.reducer';\r\n// prettier-ignore\r\nimport pSEntity, {\r\n  PSEntityState\r\n} from 'app/entities/ps-entity/ps-entity.reducer';\r\n// prettier-ignore\r\nimport pSCustomFieldsValues, {\r\n  PSCustomFieldsValuesState\r\n} from 'app/entities/ps-custom-fields-values/ps-custom-fields-values.reducer';\r\n/* jhipster-needle-add-reducer-import - JHipster will add reducer here */\r\n\r\nexport interface IRootState {\r\n  readonly authentication: AuthenticationState;\r\n  readonly applicationProfile: ApplicationProfileState;\r\n  readonly administration: AdministrationState;\r\n  readonly userManagement: UserManagementState;\r\n  readonly register: RegisterState;\r\n  readonly activate: ActivateState;\r\n  readonly passwordReset: PasswordResetState;\r\n  readonly password: PasswordState;\r\n  readonly settings: SettingsState;\r\n  readonly pSEntityTemplate: PSEntityTemplateState;\r\n  readonly pSCustomFieldsTemplate: PSCustomFieldsTemplateState;\r\n  readonly pSEntity: PSEntityState;\r\n  readonly pSCustomFieldsValues: PSCustomFieldsValuesState;\r\n  /* jhipster-needle-add-reducer-type - JHipster will add reducer type here */\r\n  readonly loadingBar: any;\r\n}\r\n\r\nconst rootReducer = combineReducers<IRootState>({\r\n  authentication,\r\n  applicationProfile,\r\n  administration,\r\n  userManagement,\r\n  register,\r\n  activate,\r\n  passwordReset,\r\n  password,\r\n  settings,\r\n  pSEntityTemplate,\r\n  pSCustomFieldsTemplate,\r\n  pSEntity,\r\n  pSCustomFieldsValues,\r\n  /* jhipster-needle-add-reducer-combine - JHipster will add reducer here */\r\n  loadingBar\r\n});\r\n\r\nexport default rootReducer;\r\n","import pick from 'lodash/pick';\r\n\r\n/**\r\n * Removes fields with an 'id' field that equals ''.\r\n * This function was created to prevent entities to be sent to\r\n * the server with relationship fields with empty an empty id and thus\r\n * resulting in a 500.\r\n *\r\n * @param entity Object to clean.\r\n */\r\nexport const cleanEntity = entity => {\r\n  const keysToKeep = Object.keys(entity).filter(k => !(entity[k] instanceof Object) || (entity[k]['id'] !== '' && entity[k]['id'] !== -1));\r\n\r\n  return pick(entity, keysToKeep);\r\n};\r\n\r\n/**\r\n * Will return a list of values according to the given keys.\r\n * This function is used to get a values in Many-to-many relations.\r\n *\r\n * @param keyList Keys.\r\n * @param data Array that contains the values.\r\n * @param fieldName Name of the field that contains the key in the value.\r\n */\r\nexport const keysToValues = (keyList: ReadonlyArray<any>, data: ReadonlyArray<any>, fieldName: string) =>\r\n  keyList.map((k: any) => data.find((e: any) => e[fieldName] === k));\r\n","module.exports = __webpack_public_path__ + \"content/4d7a941186721ef8150a081fa7cfa010.svg\";","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"mappingsz5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC5QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;;AAiCA;AAhCA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AAGA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACvEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACVA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AA6BA;AACA;AACA;;;;;;;;;;;;;;AChEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACpGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AALA;AAOA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;AC9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAPA;AAaA;AACA;AACA;;;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AAEA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAmBA;AA/BA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AAGA;AAGA;AAOA;AAAA;AAAA;;AAmCA;AAlCA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAAA;;AAEA;AACA;;AAAA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AACA;AAGA;AAIA;AACA;AAaA;AAAA;AACA;AAAA;AAkBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApDA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAwCA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AAKA;AAEA;AACA;AAGA;AACA;AAGA;AAKA;AACA;AAGA;AACA;AAGA;AAEA;AACA;AACA;AAOA;AACA;AACA;AAKA;AAGA;AACA;;AACA;;AAGA;AACA;AACA;AAOA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACpLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AAGA;AAGA;AAOA;AAAA;AAAA;;AAkEA;AAjEA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AAIA;AACA;AACA;AASA;AACA;AACA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAWA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACjGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AAEA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAmBA;AA/BA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AAGA;AAGA;AAOA;AAAA;AAAA;;AAiCA;AAhCA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAAA;;AAEA;AACA;;AAAA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AACA;AAGA;AAIA;AAEA;AACA;AAcA;AAAA;AACA;AAAA;AAoBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvEA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAyDA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AAKA;AAEA;AACA;AAGA;AACA;AAGA;AAKA;AACA;AAGA;AACA;AACA;AAOA;AACA;AACA;AAKA;AAGA;AACA;AACA;AAOA;AACA;AACA;AAKA;AAGA;AACA;;AACA;;AAGA;AACA;AACA;AAOA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACzNA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AAGA;AAGA;AAOA;AAAA;AAAA;;AAwEA;AAvEA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AAIA;AACA;AAOA;AASA;AACA;AACA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAWA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACvGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AAEA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAmBA;AA/BA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AAGA;AAGA;AAOA;AAAA;AAAA;;AA+BA;AA9BA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAAA;;AAEA;AACA;;AAAA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AAcA;AAAA;AACA;AAAA;AAmBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArDA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAwCA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AAKA;AAEA;AACA;AAGA;AACA;AAGA;AAKA;AACA;AAGA;AACA;AACA;AAOA;AACA;AACA;AAKA;AAGA;AACA;;AACA;;AAGA;AACA;AACA;AAOA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC/KA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AAGA;AAGA;AAOA;AAAA;AAAA;;AA8DA;AA7DA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AAIA;AACA;AAOA;AACA;AACA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAWA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC7FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AARA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AAEA;AAEA;AAIA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAmBA;AA/BA;AACA;AACA;AAYA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AAGA;AAGA;AAOA;AAAA;AAAA;;AA+BA;AA9BA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;AAAA;;AAEA;AACA;;AAAA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AAGA;AAIA;AACA;AAaA;AAAA;AACA;AAAA;AAkBA;AACA;AACA;AACA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApDA;AACA;AACA;AACA;;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAwCA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AAKA;AAEA;AACA;AAGA;AACA;AAGA;AAKA;AACA;AAGA;AACA;AACA;AAOA;AACA;AACA;AAKA;AAGA;AACA;;AACA;;AAGA;AACA;AACA;AAOA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC9KA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AClJA;AACA;AACA;AACA;AAGA;AAGA;AAOA;AAAA;AAAA;;AA8DA;AA7DA;AACA;AACA;AAEA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AAIA;AACA;AAOA;AACA;AACA;AACA;;AAAA;AAEA;AACA;;AAAA;AAEA;AACA;;AAAA;AAWA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;AC7FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAPA;AAeA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACnDA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAIA;AACA;AAIA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AAGA;AAEA;AAEA;;AACA;AAGA;AAGA;AAEA;AACA;AAKA;AAAA;AAAA;;AAyBA;AAxBA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;AAKA;AACA;AASA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAEA;AACA;AACA;;AAmDA;AA7DA;AACA;AACA;AAUA;AACA;AAEA;AAMA;AACA;AACA;AACA;AAGA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAKA;AACA;AAAA;;AAEA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC7FA;AAEA;AACA;AACA;AAGA;AAIA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;;AAgCA;AAvCA;AACA;AACA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAQA;AACA;AAAA;;AAEA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC3EA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACnEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAIA;AACA;AAKA;AACA;AAIA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DA;AAEA;AACA;AACA;AAEA;AAEA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;;AA+EA;AA1FA;AACA;AACA;AAWA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AACA;AAEA;AAOA;AACA;AACA;AACA;AAEA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;;AAEA;;AACA;AACA;AAMA;AACA;AAAA;;AAEA;AAGA;AACA;AACA;;;;;;;;;;;;;;ACtHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAMA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AANA;AAOA;;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACtEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAKA;AACA;AAKA;AACA;AAIA;AACA;AAEA;AACA;AAQA;AACA;AAQA;AACA;AAMA;AACA;AAKA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;;;;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AClLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AAMA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAKA;AACA;AAMA;AACA;AAKA;AACA;AACA;AAMA;AACA;AAMA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;;;;;AACA;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;;;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AAEA;AACA;AAEA;AACA;AAGA;AAIA;AAAA;AAAA;;AAgFA;AA/EA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAAA;AAAA;AAIA;;AAEA;AACA;AAEA;;AAEA;;AACA;AACA;AAEA;;AAEA;AAMA;AAEA;AACA;AACA;AAIA;AACA;AAIA;AACA;AAIA;AACA;AAIA;AACA;AAMA;;AACA;AACA;AAGA;AAEA;AACA;AAIA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC3GA;AAEA;AACA;AACA;AASA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;;AAgEA;AA9DA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AAGA;AACA;AAGA;AACA;AAQA;AAQA;AACA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;;AAAA;AAGA;AACA;AAEA;AACA;AAOA;AACA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACrFA;AACA;AACA;AAGA;AACA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAQA;AAAA;AACA;AACA;AAEA;AACA;AACA;;AAaA;AAzBA;AACA;AACA;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC3DA;AACA;AACA;AAGA;AAIA;AAAA;AAAA;;AAiBA;AAhBA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AAAA;;AAEA;AAEA;AAKA;AACA;AACA;;;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AAGA;AAQA;AACA;AAMA;AACA;AAEA;AAIA;AANA;AAUA;AACA;AAKA;AACA;AACA;AACA;AARA;AAYA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAOA;;;;AAIA;AACA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AChFA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AAIA;AAAA;AAEA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;AClBA;AAWA;AAAA;AAAA;AAAA;AACA;;AA+BA;AA7BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAKA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAMA;AAEA;AAIA;AAEA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC5CA;AAEA;AAEA;AAIA;AAEA;AACA;AAcA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAFA;AAMA;AACA;AACA;;AA0BA;AAxBA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;;;;;;;;;;;;;;;;;ACjEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;ACxCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AAEA;AACA;AAGA;AAEA;AACA;AAGA;AAAA;AAAA;AAEA;AACA;AAEA;AALA;AASA;AACA;AACA;;;;;;;;;;;;;;ACrDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAMA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAGA;AAEA;AACA;AACA;;;;;;;;;;;;;;AC/DA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACHA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACCA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACLA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;ACIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AChCA;AAAA;AAAA;AAAA;AAAA;;AAEA;AAEA;AAEA;;AAEA;AAEA;AAEA;;AAEA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AClBA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACpCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAIA;AACA;AAMA;AACA;AAOA;AACA;AAOA;AACA;AAIA;AACA;AACA;AAMA;AACA;AACA;AAKA;AACA;AAMA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;;;;AACA;AACA;AACA;AACA;;AAHA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;AACA;AAfA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC9IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACrEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;AAOA;AACA;AACA;AAEA;AACA;AAEA;;;;;;;AAOA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;AC3BA;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}